<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.5 on linux)" generated="20210512 11:51:41.414" rpa="false" schemaversion="2">
<suite id="s1" name="Create" source="/home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/tests/plans/create.robot">
<kw name="Start Admin Session" library="base" type="SETUP">
<kw name="Start Browser Session" library="base">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>false</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210512 11:51:42.315" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210512 11:51:42.766" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210512 11:51:42.314" endtime="20210512 11:51:42.768"/>
</kw>
<kw name="New Page" library="Browser">
<arg>about:blank</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210512 11:51:43.174" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<status status="PASS" starttime="20210512 11:51:42.768" endtime="20210512 11:51:43.175"/>
</kw>
<status status="PASS" starttime="20210512 11:51:42.313" endtime="20210512 11:51:43.175"/>
</kw>
<kw name="Go To Login Pages" library="auth">
<kw name="Go To" library="Browser">
<arg>https://theotokus-bodytest-web.herokuapp.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20210512 11:51:45.120" level="INFO">Succesfully opened URL https://theotokus-bodytest-web.herokuapp.com/</msg>
<status status="PASS" starttime="20210512 11:51:43.176" endtime="20210512 11:51:45.120"/>
</kw>
<status status="PASS" starttime="20210512 11:51:43.175" endtime="20210512 11:51:45.121"/>
</kw>
<kw name="Login With" library="auth">
<arg>admin@bodytest.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210512 11:51:45.123" level="INFO">Fills the text 'admin@bodytest.com' in the given field.</msg>
<status status="PASS" starttime="20210512 11:51:45.122" endtime="20210512 11:51:45.200"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=password]</arg>
<arg>${pass}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210512 11:51:45.201" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210512 11:51:45.201" endtime="20210512 11:51:45.237"/>
</kw>
<kw name="Click" library="Browser">
<arg>text=Entrar</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210512 11:51:45.237" endtime="20210512 11:51:45.310"/>
</kw>
<status status="PASS" starttime="20210512 11:51:45.121" endtime="20210512 11:51:45.311"/>
</kw>
<kw name="User Should Be Logged In" library="nav">
<arg>Administrador</arg>
<kw name="Get Text" library="Browser">
<arg>css=aside strong</arg>
<arg>should be</arg>
<arg>${user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210512 11:51:45.312" endtime="20210512 11:51:46.368"/>
</kw>
<status status="PASS" starttime="20210512 11:51:45.311" endtime="20210512 11:51:46.369"/>
</kw>
<status status="PASS" starttime="20210512 11:51:42.312" endtime="20210512 11:51:46.369"/>
</kw>
<test id="s1-t1" name="Cenario: Campos Título e Duração devem ser obrigatoriios">
<kw name="Set Variable" library="BuiltIn">
<var>@{expected_alerts}</var>
<arg>Informe o título do plano</arg>
<arg>Informe a duração do plano em meses</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210512 11:51:46.382" level="INFO">@{expected_alerts} = [ Informe o título do plano | Informe a duração do plano em meses ]</msg>
<status status="PASS" starttime="20210512 11:51:46.382" endtime="20210512 11:51:46.382"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{got_alerts}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210512 11:51:46.384" level="INFO">@{got_alerts} = [ ]</msg>
<status status="PASS" starttime="20210512 11:51:46.383" endtime="20210512 11:51:46.384"/>
</kw>
<kw name="Go To Plans" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=planos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210512 11:51:46.385" endtime="20210512 11:51:46.512"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Planos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210512 11:51:46.531" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Planos</msg>
<status status="PASS" starttime="20210512 11:51:46.513" endtime="20210512 11:51:46.532"/>
</kw>
<status status="PASS" starttime="20210512 11:51:46.384" endtime="20210512 11:51:46.532"/>
</kw>
<kw name="Go To Form Plan" library="plans">
<kw name="Click" library="Browser">
<arg>css=a[href$="planos/new"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210512 11:51:46.533" endtime="20210512 11:51:46.663"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Novo plano</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210512 11:51:46.676" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Novo plano</msg>
<status status="PASS" starttime="20210512 11:51:46.664" endtime="20210512 11:51:46.677"/>
</kw>
<status status="PASS" starttime="20210512 11:51:46.532" endtime="20210512 11:51:46.677"/>
</kw>
<kw name="Submit Plan Form" library="plans">
<kw name="Click" library="Browser">
<arg>xpath=//button[contains(text(), "Salvar")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210512 11:51:46.678" endtime="20210512 11:51:46.820"/>
</kw>
<status status="PASS" starttime="20210512 11:51:46.678" endtime="20210512 11:51:46.820"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>3</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Required Alerts" library="components">
<var>${span}</var>
<arg>${index}</arg>
<kw name="Get Text" library="Browser">
<var>${span}</var>
<arg>xpath=(//form//span)[${index}]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<msg timestamp="20210512 11:51:46.864" level="INFO">${span} = Informe o título do plano</msg>
<status status="PASS" starttime="20210512 11:51:46.822" endtime="20210512 11:51:46.864"/>
</kw>
<msg timestamp="20210512 11:51:46.864" level="INFO">${span} = Informe o título do plano</msg>
<status status="PASS" starttime="20210512 11:51:46.821" endtime="20210512 11:51:46.865"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${got_alerts}</arg>
<arg>${span}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210512 11:51:46.865" endtime="20210512 11:51:46.866"/>
</kw>
<status status="PASS" starttime="20210512 11:51:46.821" endtime="20210512 11:51:46.866"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Required Alerts" library="components">
<var>${span}</var>
<arg>${index}</arg>
<kw name="Get Text" library="Browser">
<var>${span}</var>
<arg>xpath=(//form//span)[${index}]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<msg timestamp="20210512 11:51:46.892" level="INFO">${span} = Informe a duração do plano em meses</msg>
<status status="PASS" starttime="20210512 11:51:46.867" endtime="20210512 11:51:46.892"/>
</kw>
<msg timestamp="20210512 11:51:46.893" level="INFO">${span} = Informe a duração do plano em meses</msg>
<status status="PASS" starttime="20210512 11:51:46.866" endtime="20210512 11:51:46.893"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${got_alerts}</arg>
<arg>${span}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210512 11:51:46.893" endtime="20210512 11:51:46.894"/>
</kw>
<status status="PASS" starttime="20210512 11:51:46.866" endtime="20210512 11:51:46.894"/>
</iter>
<status status="PASS" starttime="20210512 11:51:46.821" endtime="20210512 11:51:46.894"/>
</for>
<kw name="Log" library="BuiltIn">
<arg>${expected_alerts}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210512 11:51:46.895" level="INFO">['Informe o título do plano', 'Informe a duração do plano em meses']</msg>
<status status="PASS" starttime="20210512 11:51:46.894" endtime="20210512 11:51:46.895"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${got_alerts}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210512 11:51:46.896" level="INFO">['Informe o título do plano', 'Informe a duração do plano em meses']</msg>
<status status="PASS" starttime="20210512 11:51:46.895" endtime="20210512 11:51:46.896"/>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<arg>${expected_alerts}</arg>
<arg>${got_alerts}</arg>
<doc>Fails if given lists are unequal.</doc>
<status status="PASS" starttime="20210512 11:51:46.896" endtime="20210512 11:51:46.897"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210512 11:51:47.211" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-1.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210512 11:51:46.897" endtime="20210512 11:51:47.211"/>
</kw>
<tag>temp</tag>
<status status="PASS" starttime="20210512 11:51:46.369" endtime="20210512 11:51:47.211"/>
</test>
<doc>Cadastro de Planos</doc>
<status status="PASS" starttime="20210512 11:51:41.416" endtime="20210512 11:51:47.224"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">temp</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Create">Create</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
