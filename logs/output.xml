<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.5 on linux)" generated="20210429 11:18:44.285" rpa="false" schemaversion="2">
<suite id="s1" name="Cadastro Alunos" source="/home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/tests/cadastro_alunos.robot">
<kw name="Start Admin Session" library="base" type="SETUP">
<kw name="Start Browser Session" library="base">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>true</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210429 11:18:45.203" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210429 11:18:45.407" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210429 11:18:45.202" endtime="20210429 11:18:45.408"/>
</kw>
<kw name="New Page" library="Browser">
<arg>about:blank</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210429 11:18:45.526" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<status status="PASS" starttime="20210429 11:18:45.408" endtime="20210429 11:18:45.526"/>
</kw>
<status status="PASS" starttime="20210429 11:18:45.202" endtime="20210429 11:18:45.526"/>
</kw>
<kw name="Go To Login Pages" library="auth">
<kw name="Go To" library="Browser">
<arg>https://theotokus-bodytest-web.herokuapp.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20210429 11:18:47.407" level="INFO">Succesfully opened URL https://theotokus-bodytest-web.herokuapp.com/</msg>
<status status="PASS" starttime="20210429 11:18:45.527" endtime="20210429 11:18:47.407"/>
</kw>
<status status="PASS" starttime="20210429 11:18:45.527" endtime="20210429 11:18:47.407"/>
</kw>
<kw name="Login With" library="auth">
<arg>admin@bodytest.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210429 11:18:47.409" level="INFO">Fills the text 'admin@bodytest.com' in the given field.</msg>
<status status="PASS" starttime="20210429 11:18:47.409" endtime="20210429 11:18:47.494"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=password]</arg>
<arg>${pass}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210429 11:18:47.495" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210429 11:18:47.495" endtime="20210429 11:18:47.531"/>
</kw>
<kw name="Click" library="Browser">
<arg>text=Entrar</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210429 11:18:47.531" endtime="20210429 11:18:47.616"/>
</kw>
<status status="PASS" starttime="20210429 11:18:47.408" endtime="20210429 11:18:47.617"/>
</kw>
<kw name="User Should Be Logged In" library="nav">
<arg>Administrador</arg>
<kw name="Get Text" library="Browser">
<arg>css=aside strong</arg>
<arg>should be</arg>
<arg>${user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210429 11:18:47.618" endtime="20210429 11:18:48.553"/>
</kw>
<status status="PASS" starttime="20210429 11:18:47.617" endtime="20210429 11:18:48.554"/>
</kw>
<status status="PASS" starttime="20210429 11:18:45.201" endtime="20210429 11:18:48.554"/>
</kw>
<test id="s1-t1" name="Novo aluno">
<kw name="Set Variable" library="BuiltIn">
<var>${email}</var>
<arg>edson@theotokus.com</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210429 11:18:48.567" level="INFO">${email} = edson@theotokus.com</msg>
<status status="PASS" starttime="20210429 11:18:48.566" endtime="20210429 11:18:48.567"/>
</kw>
<kw name="Remove Student" library="DeloreanLibrary">
<arg>edson@theotokus.com</arg>
<msg timestamp="20210429 11:18:48.568" level="INFO">delete from students where email = 'edson@theotokus.com'</msg>
<status status="PASS" starttime="20210429 11:18:48.568" endtime="20210429 11:18:49.668"/>
</kw>
<kw name="Go to Students" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=alunos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210429 11:18:49.669" endtime="20210429 11:18:49.797"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Alunos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210429 11:18:49.822" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Alunos</msg>
<status status="PASS" starttime="20210429 11:18:49.797" endtime="20210429 11:18:49.822"/>
</kw>
<status status="PASS" starttime="20210429 11:18:49.668" endtime="20210429 11:18:49.822"/>
</kw>
<kw name="Go to Form Student" library="students">
<kw name="Click" library="Browser">
<arg>css=a[href$="alunos/new"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210429 11:18:49.824" endtime="20210429 11:18:49.940"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Novo aluno</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210429 11:18:49.958" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Novo aluno</msg>
<status status="PASS" starttime="20210429 11:18:49.941" endtime="20210429 11:18:49.958"/>
</kw>
<status status="PASS" starttime="20210429 11:18:49.823" endtime="20210429 11:18:49.959"/>
</kw>
<kw name="New Student" library="students">
<arg>Edson José dos Santos</arg>
<arg>${email}</arg>
<arg>39</arg>
<arg>81</arg>
<arg>1.82</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=name]</arg>
<arg>${name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210429 11:18:49.966" level="INFO">Fills the text 'Edson José dos Santos' in the given field.</msg>
<status status="PASS" starttime="20210429 11:18:49.966" endtime="20210429 11:18:50.008"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210429 11:18:50.009" level="INFO">Fills the text 'edson@theotokus.com' in the given field.</msg>
<status status="PASS" starttime="20210429 11:18:50.009" endtime="20210429 11:18:50.039"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=age]</arg>
<arg>${age}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210429 11:18:50.040" level="INFO">Fills the text '39' in the given field.</msg>
<status status="PASS" starttime="20210429 11:18:50.039" endtime="20210429 11:18:50.096"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=weight]</arg>
<arg>${weight}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210429 11:18:50.098" level="INFO">Fills the text '81' in the given field.</msg>
<status status="PASS" starttime="20210429 11:18:50.096" endtime="20210429 11:18:50.131"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=feet_tall]</arg>
<arg>${feet_tall}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210429 11:18:50.133" level="INFO">Fills the text '1.82' in the given field.</msg>
<status status="PASS" starttime="20210429 11:18:50.132" endtime="20210429 11:18:50.170"/>
</kw>
<kw name="Click" library="Browser">
<arg>css=button[form$=Student]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210429 11:18:50.171" endtime="20210429 11:18:50.235"/>
</kw>
<status status="PASS" starttime="20210429 11:18:49.961" endtime="20210429 11:18:50.235"/>
</kw>
<kw name="Toaster Text Should Be" library="components">
<arg>Aluno cadastrado com sucesso.</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=.Toastify__toast-body &gt;&gt; text=${expect_text}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210429 11:18:50.673" level="INFO">Wait for Element with selector: css=.Toastify__toast-body &gt;&gt; text=Aluno cadastrado com sucesso.</msg>
<status status="PASS" starttime="20210429 11:18:50.236" endtime="20210429 11:18:50.674"/>
</kw>
<status status="PASS" starttime="20210429 11:18:50.236" endtime="20210429 11:18:50.674"/>
</kw>
<kw name="Thinking And Take Screenshot" library="base" type="TEARDOWN">
<arg>2</arg>
<kw name="Sleep" library="BuiltIn">
<arg>${timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210429 11:18:52.677" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210429 11:18:50.676" endtime="20210429 11:18:52.677"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210429 11:18:52.826" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-1.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210429 11:18:52.678" endtime="20210429 11:18:52.826"/>
</kw>
<status status="PASS" starttime="20210429 11:18:50.675" endtime="20210429 11:18:52.827"/>
</kw>
<status status="PASS" starttime="20210429 11:18:48.554" endtime="20210429 11:18:52.827"/>
</test>
<doc>Cadastro de alunos</doc>
<status status="PASS" starttime="20210429 11:18:44.288" endtime="20210429 11:18:52.836"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Cadastro Alunos">Cadastro Alunos</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
