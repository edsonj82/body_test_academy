<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.5 on linux)" generated="20210504 11:37:56.363" rpa="false" schemaversion="2">
<suite id="s1" name="Remove" source="/home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/tests/students/remove.robot">
<kw name="Start Admin Session" library="base" type="SETUP">
<kw name="Start Browser Session" library="base">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>true</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210504 11:37:57.298" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210504 11:37:57.496" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210504 11:37:57.297" endtime="20210504 11:37:57.496"/>
</kw>
<kw name="New Page" library="Browser">
<arg>about:blank</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210504 11:37:57.617" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<status status="PASS" starttime="20210504 11:37:57.496" endtime="20210504 11:37:57.617"/>
</kw>
<status status="PASS" starttime="20210504 11:37:57.296" endtime="20210504 11:37:57.618"/>
</kw>
<kw name="Go To Login Pages" library="auth">
<kw name="Go To" library="Browser">
<arg>https://theotokus-bodytest-web.herokuapp.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20210504 11:38:00.508" level="INFO">Succesfully opened URL https://theotokus-bodytest-web.herokuapp.com/</msg>
<status status="PASS" starttime="20210504 11:37:57.618" endtime="20210504 11:38:00.509"/>
</kw>
<status status="PASS" starttime="20210504 11:37:57.618" endtime="20210504 11:38:00.509"/>
</kw>
<kw name="Login With" library="auth">
<arg>admin@bodytest.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210504 11:38:00.511" level="INFO">Fills the text 'admin@bodytest.com' in the given field.</msg>
<status status="PASS" starttime="20210504 11:38:00.511" endtime="20210504 11:38:00.581"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=password]</arg>
<arg>${pass}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210504 11:38:00.582" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210504 11:38:00.582" endtime="20210504 11:38:00.616"/>
</kw>
<kw name="Click" library="Browser">
<arg>text=Entrar</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210504 11:38:00.617" endtime="20210504 11:38:00.705"/>
</kw>
<status status="PASS" starttime="20210504 11:38:00.510" endtime="20210504 11:38:00.705"/>
</kw>
<kw name="User Should Be Logged In" library="nav">
<arg>Administrador</arg>
<kw name="Get Text" library="Browser">
<arg>css=aside strong</arg>
<arg>should be</arg>
<arg>${user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210504 11:38:00.706" endtime="20210504 11:38:01.513"/>
</kw>
<status status="PASS" starttime="20210504 11:38:00.705" endtime="20210504 11:38:01.514"/>
</kw>
<status status="PASS" starttime="20210504 11:37:57.295" endtime="20210504 11:38:01.514"/>
</kw>
<test id="s1-t1" name="Cenario: Remover aluno cadastrado">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{student}</var>
<arg>name=Cintia Rodrigues</arg>
<arg>email=cintia@xpto.com</arg>
<arg>age=30</arg>
<arg>weight=60</arg>
<arg>feet_tall=1.71</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210504 11:38:01.534" level="INFO">&amp;{student} = { name=Cintia Rodrigues | email=cintia@xpto.com | age=30 | weight=60 | feet_tall=1.71 }</msg>
<status status="PASS" starttime="20210504 11:38:01.533" endtime="20210504 11:38:01.534"/>
</kw>
<kw name="Insert Student" library="DeloreanLibrary">
<arg>${student}</arg>
<msg timestamp="20210504 11:38:01.536" level="INFO">delete from students where email = 'cintia@xpto.com'</msg>
<msg timestamp="20210504 11:38:02.635" level="INFO">insert into students(name, email, age, weight, feet_tall, created_at, updated_at)values('Cintia Rodrigues','cintia@xpto.com',30,60,1.71,NOW(),NOW());</msg>
<status status="PASS" starttime="20210504 11:38:01.535" endtime="20210504 11:38:03.712"/>
</kw>
<kw name="Go to Students" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=alunos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210504 11:38:03.714" endtime="20210504 11:38:03.838"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Alunos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210504 11:38:03.861" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Alunos</msg>
<status status="PASS" starttime="20210504 11:38:03.839" endtime="20210504 11:38:03.861"/>
</kw>
<status status="PASS" starttime="20210504 11:38:03.713" endtime="20210504 11:38:03.861"/>
</kw>
<kw name="Request Removal By Email" library="students">
<arg>${student.email}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//td[contains(text(),"${email}")]/../td/button[@id="trash"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210504 11:38:03.864" endtime="20210504 11:38:04.279"/>
</kw>
<status status="PASS" starttime="20210504 11:38:03.862" endtime="20210504 11:38:04.280"/>
</kw>
<kw name="Confirm Removal" library="students">
<kw name="Click" library="Browser">
<arg>text=SIM, pode apagar!</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210504 11:38:04.282" endtime="20210504 11:38:04.622"/>
</kw>
<status status="PASS" starttime="20210504 11:38:04.280" endtime="20210504 11:38:04.622"/>
</kw>
<kw name="Toaster Text Should Be" library="components">
<arg>Aluno removido com sucesso.</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=.Toastify__toast-body &gt;&gt; text=${expect_text}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210504 11:38:04.974" level="INFO">Wait for Element with selector: css=.Toastify__toast-body &gt;&gt; text=Aluno removido com sucesso.</msg>
<status status="PASS" starttime="20210504 11:38:04.624" endtime="20210504 11:38:04.974"/>
</kw>
<status status="PASS" starttime="20210504 11:38:04.623" endtime="20210504 11:38:04.975"/>
</kw>
<kw name="Student Should Not Visible" library="students">
<arg>${student.email}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>xpath=//td[contains(text(),"${email}")]</arg>
<arg>detached</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210504 11:38:05.008" level="INFO">Wait for Element with selector: xpath=//td[contains(text(),"cintia@xpto.com")]</msg>
<status status="PASS" starttime="20210504 11:38:04.977" endtime="20210504 11:38:05.009"/>
</kw>
<status status="PASS" starttime="20210504 11:38:04.975" endtime="20210504 11:38:05.009"/>
</kw>
<kw name="Thinking And Take Screenshot" library="base" type="TEARDOWN">
<arg>2</arg>
<kw name="Sleep" library="BuiltIn">
<arg>${timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210504 11:38:07.012" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210504 11:38:05.011" endtime="20210504 11:38:07.012"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210504 11:38:07.159" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-1.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210504 11:38:07.013" endtime="20210504 11:38:07.159"/>
</kw>
<status status="PASS" starttime="20210504 11:38:05.010" endtime="20210504 11:38:07.159"/>
</kw>
<status status="PASS" starttime="20210504 11:38:01.514" endtime="20210504 11:38:07.159"/>
</test>
<doc>Remoção de alunos</doc>
<status status="PASS" starttime="20210504 11:37:56.364" endtime="20210504 11:38:07.168"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Remove">Remove</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
