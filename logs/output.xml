<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.5 on linux)" generated="20210517 11:43:44.606" rpa="false" schemaversion="2">
<suite id="s1" name="Plans" source="/home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/tests/plans">
<suite id="s1-s1" name="Create" source="/home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/tests/plans/create.robot">
<kw name="Start Admin Session" library="base" type="SETUP">
<kw name="Start Browser Session" library="base">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>true</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210517 11:43:45.447" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210517 11:43:45.632" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210517 11:43:45.446" endtime="20210517 11:43:45.633"/>
</kw>
<kw name="New Page" library="Browser">
<arg>about:blank</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210517 11:43:45.736" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<status status="PASS" starttime="20210517 11:43:45.633" endtime="20210517 11:43:45.737"/>
</kw>
<status status="PASS" starttime="20210517 11:43:45.446" endtime="20210517 11:43:45.737"/>
</kw>
<kw name="Go To Login Pages" library="auth">
<kw name="Go To" library="Browser">
<arg>https://theotokus-bodytest-web.herokuapp.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20210517 11:43:47.763" level="INFO">Succesfully opened URL https://theotokus-bodytest-web.herokuapp.com/</msg>
<status status="PASS" starttime="20210517 11:43:45.738" endtime="20210517 11:43:47.763"/>
</kw>
<status status="PASS" starttime="20210517 11:43:45.737" endtime="20210517 11:43:47.763"/>
</kw>
<kw name="Login With" library="auth">
<arg>admin@bodytest.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:43:47.765" level="INFO">Fills the text 'admin@bodytest.com' in the given field.</msg>
<status status="PASS" starttime="20210517 11:43:47.764" endtime="20210517 11:43:47.840"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=password]</arg>
<arg>${pass}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:43:47.841" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210517 11:43:47.840" endtime="20210517 11:43:47.873"/>
</kw>
<kw name="Click" library="Browser">
<arg>text=Entrar</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:47.874" endtime="20210517 11:43:47.946"/>
</kw>
<status status="PASS" starttime="20210517 11:43:47.764" endtime="20210517 11:43:47.947"/>
</kw>
<kw name="User Should Be Logged In" library="nav">
<arg>Administrador</arg>
<kw name="Get Text" library="Browser">
<arg>css=aside strong</arg>
<arg>should be</arg>
<arg>${user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210517 11:43:47.947" endtime="20210517 11:43:48.800"/>
</kw>
<status status="PASS" starttime="20210517 11:43:47.947" endtime="20210517 11:43:48.800"/>
</kw>
<status status="PASS" starttime="20210517 11:43:45.445" endtime="20210517 11:43:48.800"/>
</kw>
<test id="s1-s1-t1" name="Cenario: Calcular Preço Total do Plano">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{plan}</var>
<arg>title=Plano Alfa</arg>
<arg>duration=12</arg>
<arg>price=19,99</arg>
<arg>total=R$ 239,88</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210517 11:43:48.819" level="INFO">&amp;{plan} = { title=Plano Alfa | duration=12 | price=19,99 | total=R$ 239,88 }</msg>
<status status="PASS" starttime="20210517 11:43:48.818" endtime="20210517 11:43:48.819"/>
</kw>
<kw name="Go To Plans" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=planos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:48.820" endtime="20210517 11:43:48.932"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Planos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:43:48.952" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Planos</msg>
<status status="PASS" starttime="20210517 11:43:48.933" endtime="20210517 11:43:48.953"/>
</kw>
<status status="PASS" starttime="20210517 11:43:48.820" endtime="20210517 11:43:48.953"/>
</kw>
<kw name="Go To Form Plan" library="plans">
<kw name="Click" library="Browser">
<arg>css=a[href$="planos/new"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:48.956" endtime="20210517 11:43:49.086"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Novo plano</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:43:49.101" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Novo plano</msg>
<status status="PASS" starttime="20210517 11:43:49.086" endtime="20210517 11:43:49.101"/>
</kw>
<status status="PASS" starttime="20210517 11:43:48.955" endtime="20210517 11:43:49.102"/>
</kw>
<kw name="Fill Plan Forms" library="plans">
<arg>${plan}</arg>
<kw name="Fill Text" library="Browser">
<arg>${TITLE_FIELD}</arg>
<arg>${plan.title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:43:49.106" level="INFO">Fills the text 'Plano Alfa' in the given field.</msg>
<status status="PASS" starttime="20210517 11:43:49.104" endtime="20210517 11:43:49.145"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${DURATION_FIELD}</arg>
<arg>${plan.duration}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:43:49.147" level="INFO">Fills the text '12' in the given field.</msg>
<status status="PASS" starttime="20210517 11:43:49.145" endtime="20210517 11:43:49.185"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${PRICE_FIELD}</arg>
<arg>${plan.price}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:43:49.187" level="INFO">Fills the text '19,99' in the given field.</msg>
<status status="PASS" starttime="20210517 11:43:49.185" endtime="20210517 11:43:49.231"/>
</kw>
<status status="PASS" starttime="20210517 11:43:49.102" endtime="20210517 11:43:49.232"/>
</kw>
<kw name="Total Plan Should Be" library="plans">
<arg>${plan.total}</arg>
<kw name="Get Attribute" library="Browser">
<arg>${TOTAL_FIELD}</arg>
<arg>value</arg>
<arg>==</arg>
<arg>${total}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the HTML ``attribute`` of the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:49.236" endtime="20210517 11:43:49.273"/>
</kw>
<status status="PASS" starttime="20210517 11:43:49.233" endtime="20210517 11:43:49.274"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210517 11:43:49.418" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-1.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210517 11:43:49.274" endtime="20210517 11:43:49.418"/>
</kw>
<status status="PASS" starttime="20210517 11:43:48.801" endtime="20210517 11:43:49.419"/>
</test>
<test id="s1-s1-t2" name="Cenario: Novo Plano">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{plan}</var>
<arg>title=Plano Loyola</arg>
<arg>duration=12</arg>
<arg>price=19,99</arg>
<arg>total=R$ 239,88</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210517 11:43:49.435" level="INFO">&amp;{plan} = { title=Plano Loyola | duration=12 | price=19,99 | total=R$ 239,88 }</msg>
<status status="PASS" starttime="20210517 11:43:49.434" endtime="20210517 11:43:49.435"/>
</kw>
<kw name="Go To Plans" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=planos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:49.436" endtime="20210517 11:43:49.529"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Planos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:43:49.545" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Planos</msg>
<status status="PASS" starttime="20210517 11:43:49.529" endtime="20210517 11:43:49.545"/>
</kw>
<status status="PASS" starttime="20210517 11:43:49.435" endtime="20210517 11:43:49.546"/>
</kw>
<kw name="Go To Form Plan" library="plans">
<kw name="Click" library="Browser">
<arg>css=a[href$="planos/new"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:49.547" endtime="20210517 11:43:49.625"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Novo plano</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:43:49.642" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Novo plano</msg>
<status status="PASS" starttime="20210517 11:43:49.626" endtime="20210517 11:43:49.642"/>
</kw>
<status status="PASS" starttime="20210517 11:43:49.546" endtime="20210517 11:43:49.642"/>
</kw>
<kw name="Fill Plan Forms" library="plans">
<arg>${plan}</arg>
<kw name="Fill Text" library="Browser">
<arg>${TITLE_FIELD}</arg>
<arg>${plan.title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:43:49.645" level="INFO">Fills the text 'Plano Loyola' in the given field.</msg>
<status status="PASS" starttime="20210517 11:43:49.644" endtime="20210517 11:43:49.687"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${DURATION_FIELD}</arg>
<arg>${plan.duration}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:43:49.689" level="INFO">Fills the text '12' in the given field.</msg>
<status status="PASS" starttime="20210517 11:43:49.688" endtime="20210517 11:43:49.723"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${PRICE_FIELD}</arg>
<arg>${plan.price}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:43:49.725" level="INFO">Fills the text '19,99' in the given field.</msg>
<status status="PASS" starttime="20210517 11:43:49.724" endtime="20210517 11:43:49.757"/>
</kw>
<status status="PASS" starttime="20210517 11:43:49.643" endtime="20210517 11:43:49.757"/>
</kw>
<kw name="Submit Plan Form" library="plans">
<kw name="Click" library="Browser">
<arg>xpath=//button[contains(text(), "Salvar")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:49.759" endtime="20210517 11:43:49.815"/>
</kw>
<status status="PASS" starttime="20210517 11:43:49.758" endtime="20210517 11:43:49.815"/>
</kw>
<kw name="Toaster Text Should Be" library="components">
<arg>Plano cadastrado com sucesso</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=.Toastify__toast-body &gt;&gt; text=${expect_text}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:43:50.167" level="INFO">Wait for Element with selector: css=.Toastify__toast-body &gt;&gt; text=Plano cadastrado com sucesso</msg>
<status status="PASS" starttime="20210517 11:43:49.817" endtime="20210517 11:43:50.168"/>
</kw>
<status status="PASS" starttime="20210517 11:43:49.816" endtime="20210517 11:43:50.168"/>
</kw>
<kw name="Thinking And Take Screenshot" library="base" type="TEARDOWN">
<arg>2</arg>
<kw name="Sleep" library="BuiltIn">
<arg>${timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210517 11:43:52.171" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210517 11:43:50.170" endtime="20210517 11:43:52.171"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210517 11:43:52.299" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-2.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210517 11:43:52.172" endtime="20210517 11:43:52.300"/>
</kw>
<status status="PASS" starttime="20210517 11:43:50.169" endtime="20210517 11:43:52.300"/>
</kw>
<status status="PASS" starttime="20210517 11:43:49.426" endtime="20210517 11:43:52.301"/>
</test>
<test id="s1-s1-t3" name="Cenario: Campos Título e Duração devem ser obrigatoriios">
<kw name="Set Variable" library="BuiltIn">
<var>@{expected_alerts}</var>
<arg>Informe o título do plano</arg>
<arg>Informe a duração do plano em meses</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210517 11:43:52.317" level="INFO">@{expected_alerts} = [ Informe o título do plano | Informe a duração do plano em meses ]</msg>
<status status="PASS" starttime="20210517 11:43:52.316" endtime="20210517 11:43:52.317"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{got_alerts}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20210517 11:43:52.318" level="INFO">@{got_alerts} = [ ]</msg>
<status status="PASS" starttime="20210517 11:43:52.317" endtime="20210517 11:43:52.318"/>
</kw>
<kw name="Go To Plans" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=planos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:52.319" endtime="20210517 11:43:52.400"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Planos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:43:52.421" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Planos</msg>
<status status="PASS" starttime="20210517 11:43:52.400" endtime="20210517 11:43:52.422"/>
</kw>
<status status="PASS" starttime="20210517 11:43:52.318" endtime="20210517 11:43:52.422"/>
</kw>
<kw name="Go To Form Plan" library="plans">
<kw name="Click" library="Browser">
<arg>css=a[href$="planos/new"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:52.423" endtime="20210517 11:43:52.514"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Novo plano</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:43:52.532" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Novo plano</msg>
<status status="PASS" starttime="20210517 11:43:52.514" endtime="20210517 11:43:52.532"/>
</kw>
<status status="PASS" starttime="20210517 11:43:52.423" endtime="20210517 11:43:52.533"/>
</kw>
<kw name="Submit Plan Form" library="plans">
<kw name="Click" library="Browser">
<arg>xpath=//button[contains(text(), "Salvar")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:52.534" endtime="20210517 11:43:52.611"/>
</kw>
<status status="PASS" starttime="20210517 11:43:52.533" endtime="20210517 11:43:52.612"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>3</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Required Alerts" library="components">
<var>${span}</var>
<arg>${index}</arg>
<kw name="Get Text" library="Browser">
<var>${span}</var>
<arg>xpath=(//form//span)[${index}]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<msg timestamp="20210517 11:43:52.644" level="INFO">${span} = Informe o título do plano</msg>
<status status="PASS" starttime="20210517 11:43:52.614" endtime="20210517 11:43:52.644"/>
</kw>
<msg timestamp="20210517 11:43:52.645" level="INFO">${span} = Informe o título do plano</msg>
<status status="PASS" starttime="20210517 11:43:52.613" endtime="20210517 11:43:52.645"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${got_alerts}</arg>
<arg>${span}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210517 11:43:52.645" endtime="20210517 11:43:52.646"/>
</kw>
<status status="PASS" starttime="20210517 11:43:52.613" endtime="20210517 11:43:52.646"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Required Alerts" library="components">
<var>${span}</var>
<arg>${index}</arg>
<kw name="Get Text" library="Browser">
<var>${span}</var>
<arg>xpath=(//form//span)[${index}]</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<msg timestamp="20210517 11:43:52.679" level="INFO">${span} = Informe a duração do plano em meses</msg>
<status status="PASS" starttime="20210517 11:43:52.648" endtime="20210517 11:43:52.679"/>
</kw>
<msg timestamp="20210517 11:43:52.680" level="INFO">${span} = Informe a duração do plano em meses</msg>
<status status="PASS" starttime="20210517 11:43:52.647" endtime="20210517 11:43:52.680"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${got_alerts}</arg>
<arg>${span}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20210517 11:43:52.680" endtime="20210517 11:43:52.681"/>
</kw>
<status status="PASS" starttime="20210517 11:43:52.646" endtime="20210517 11:43:52.682"/>
</iter>
<status status="PASS" starttime="20210517 11:43:52.612" endtime="20210517 11:43:52.682"/>
</for>
<kw name="Log" library="BuiltIn">
<arg>${expected_alerts}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210517 11:43:52.684" level="INFO">['Informe o título do plano', 'Informe a duração do plano em meses']</msg>
<status status="PASS" starttime="20210517 11:43:52.683" endtime="20210517 11:43:52.684"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${got_alerts}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210517 11:43:52.687" level="INFO">['Informe o título do plano', 'Informe a duração do plano em meses']</msg>
<status status="PASS" starttime="20210517 11:43:52.686" endtime="20210517 11:43:52.689"/>
</kw>
<kw name="Lists Should Be Equal" library="Collections">
<arg>${expected_alerts}</arg>
<arg>${got_alerts}</arg>
<doc>Fails if given lists are unequal.</doc>
<status status="PASS" starttime="20210517 11:43:52.691" endtime="20210517 11:43:52.692"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210517 11:43:52.853" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-3.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210517 11:43:52.693" endtime="20210517 11:43:52.853"/>
</kw>
<status status="PASS" starttime="20210517 11:43:52.308" endtime="20210517 11:43:52.853"/>
</test>
<test id="s1-s1-t4" name="Cenario: A duração deve ser no mínimo 1 mês">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{plan}</var>
<arg>title=Edson Teste</arg>
<arg>duration=0</arg>
<arg>price=19,99</arg>
<arg>total=R$ 239,88</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210517 11:43:52.867" level="INFO">&amp;{plan} = { title=Edson Teste | duration=0 | price=19,99 | total=R$ 239,88 }</msg>
<status status="PASS" starttime="20210517 11:43:52.866" endtime="20210517 11:43:52.868"/>
</kw>
<kw name="Go To Plans" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=planos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:52.869" endtime="20210517 11:43:52.972"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Planos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:43:52.988" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Planos</msg>
<status status="PASS" starttime="20210517 11:43:52.973" endtime="20210517 11:43:52.989"/>
</kw>
<status status="PASS" starttime="20210517 11:43:52.868" endtime="20210517 11:43:52.989"/>
</kw>
<kw name="Go To Form Plan" library="plans">
<kw name="Click" library="Browser">
<arg>css=a[href$="planos/new"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:52.990" endtime="20210517 11:43:53.075"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Novo plano</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:43:53.091" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Novo plano</msg>
<status status="PASS" starttime="20210517 11:43:53.075" endtime="20210517 11:43:53.092"/>
</kw>
<status status="PASS" starttime="20210517 11:43:52.990" endtime="20210517 11:43:53.092"/>
</kw>
<kw name="Fill Plan Forms" library="plans">
<arg>${plan}</arg>
<kw name="Fill Text" library="Browser">
<arg>${TITLE_FIELD}</arg>
<arg>${plan.title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:43:53.095" level="INFO">Fills the text 'Edson Teste' in the given field.</msg>
<status status="PASS" starttime="20210517 11:43:53.094" endtime="20210517 11:43:53.140"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${DURATION_FIELD}</arg>
<arg>${plan.duration}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:43:53.142" level="INFO">Fills the text '0' in the given field.</msg>
<status status="PASS" starttime="20210517 11:43:53.140" endtime="20210517 11:43:53.194"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${PRICE_FIELD}</arg>
<arg>${plan.price}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:43:53.196" level="INFO">Fills the text '19,99' in the given field.</msg>
<status status="PASS" starttime="20210517 11:43:53.194" endtime="20210517 11:43:53.225"/>
</kw>
<status status="PASS" starttime="20210517 11:43:53.093" endtime="20210517 11:43:53.225"/>
</kw>
<kw name="Submit Plan Form" library="plans">
<kw name="Click" library="Browser">
<arg>xpath=//button[contains(text(), "Salvar")]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:53.226" endtime="20210517 11:43:53.299"/>
</kw>
<status status="PASS" starttime="20210517 11:43:53.225" endtime="20210517 11:43:53.300"/>
</kw>
<kw name="Alert Text Should Be" library="components">
<arg>A duração dever ser no mínimo 1 mês</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=form span &gt;&gt; text=${expect_text}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:43:53.317" level="INFO">Wait for Element with selector: css=form span &gt;&gt; text=A duração dever ser no mínimo 1 mês</msg>
<status status="PASS" starttime="20210517 11:43:53.301" endtime="20210517 11:43:53.317"/>
</kw>
<status status="PASS" starttime="20210517 11:43:53.300" endtime="20210517 11:43:53.318"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210517 11:43:53.470" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-4.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210517 11:43:53.318" endtime="20210517 11:43:53.470"/>
</kw>
<status status="PASS" starttime="20210517 11:43:52.859" endtime="20210517 11:43:53.470"/>
</test>
<doc>Cadastro de Planos</doc>
<status status="PASS" starttime="20210517 11:43:44.640" endtime="20210517 11:43:53.478"/>
</suite>
<suite id="s1-s2" name="Remove" source="/home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/tests/plans/remove.robot">
<test id="s1-s2-t1" name="Cenario: Desistir da exclusão">
<kw name="Start Admin Session" library="base" type="SETUP">
<kw name="Start Browser Session" library="base">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>true</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210517 11:43:53.585" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210517 11:43:53.759" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210517 11:43:53.584" endtime="20210517 11:43:53.759"/>
</kw>
<kw name="New Page" library="Browser">
<arg>about:blank</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210517 11:43:53.868" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<status status="PASS" starttime="20210517 11:43:53.760" endtime="20210517 11:43:53.869"/>
</kw>
<status status="PASS" starttime="20210517 11:43:53.584" endtime="20210517 11:43:53.869"/>
</kw>
<kw name="Go To Login Pages" library="auth">
<kw name="Go To" library="Browser">
<arg>https://theotokus-bodytest-web.herokuapp.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20210517 11:43:55.881" level="INFO">Succesfully opened URL https://theotokus-bodytest-web.herokuapp.com/</msg>
<status status="PASS" starttime="20210517 11:43:53.870" endtime="20210517 11:43:55.882"/>
</kw>
<status status="PASS" starttime="20210517 11:43:53.869" endtime="20210517 11:43:55.882"/>
</kw>
<kw name="Login With" library="auth">
<arg>admin@bodytest.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:43:55.884" level="INFO">Fills the text 'admin@bodytest.com' in the given field.</msg>
<status status="PASS" starttime="20210517 11:43:55.883" endtime="20210517 11:43:55.942"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=password]</arg>
<arg>${pass}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:43:55.943" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210517 11:43:55.942" endtime="20210517 11:43:55.971"/>
</kw>
<kw name="Click" library="Browser">
<arg>text=Entrar</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:55.972" endtime="20210517 11:43:56.044"/>
</kw>
<status status="PASS" starttime="20210517 11:43:55.882" endtime="20210517 11:43:56.044"/>
</kw>
<kw name="User Should Be Logged In" library="nav">
<arg>Administrador</arg>
<kw name="Get Text" library="Browser">
<arg>css=aside strong</arg>
<arg>should be</arg>
<arg>${user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210517 11:43:56.046" endtime="20210517 11:43:56.743"/>
</kw>
<status status="PASS" starttime="20210517 11:43:56.045" endtime="20210517 11:43:56.744"/>
</kw>
<status status="PASS" starttime="20210517 11:43:53.583" endtime="20210517 11:43:56.744"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{plan}</var>
<arg>title=Plano Loyola</arg>
<arg>duration=12</arg>
<arg>price=19.99</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210517 11:43:56.746" level="INFO">&amp;{plan} = { title=Plano Loyola | duration=12 | price=19.99 }</msg>
<status status="PASS" starttime="20210517 11:43:56.745" endtime="20210517 11:43:56.746"/>
</kw>
<kw name="Insert Plan" library="DeloreanLibrary">
<arg>${plan}</arg>
<msg timestamp="20210517 11:43:56.747" level="INFO">delete from plans where title = 'Plano Loyola'</msg>
<msg timestamp="20210517 11:43:57.874" level="INFO">insert into plans(title, duration, price, created_at, updated_at)values('Plano Loyola',12,19.99, NOW(), NOW());</msg>
<status status="PASS" starttime="20210517 11:43:56.746" endtime="20210517 11:43:59.034"/>
</kw>
<kw name="Go To Plans" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=planos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:59.036" endtime="20210517 11:43:59.142"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Planos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:43:59.160" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Planos</msg>
<status status="PASS" starttime="20210517 11:43:59.142" endtime="20210517 11:43:59.160"/>
</kw>
<status status="PASS" starttime="20210517 11:43:59.034" endtime="20210517 11:43:59.161"/>
</kw>
<kw name="Search Plan By Title" library="plans">
<arg>${plan.title}</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[placeholder="Buscar plano"]</arg>
<arg>${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:43:59.163" level="INFO">Fills the text 'Plano Loyola' in the given field.</msg>
<status status="PASS" starttime="20210517 11:43:59.163" endtime="20210517 11:43:59.195"/>
</kw>
<status status="PASS" starttime="20210517 11:43:59.161" endtime="20210517 11:43:59.195"/>
</kw>
<kw name="Request Removal By Title" library="plans">
<arg>${plan.title}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//td[contains(text(),"${title}")]/../td/button[@id="trash"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:59.197" endtime="20210517 11:43:59.562"/>
</kw>
<status status="PASS" starttime="20210517 11:43:59.196" endtime="20210517 11:43:59.562"/>
</kw>
<kw name="Cancel Removal" library="students">
<kw name="Click" library="Browser">
<arg>text=NÃO</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:43:59.564" endtime="20210517 11:43:59.892"/>
</kw>
<status status="PASS" starttime="20210517 11:43:59.563" endtime="20210517 11:43:59.892"/>
</kw>
<kw name="Plan Should Be Visible" library="plans">
<arg>${plan.title}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>xpath=//td[contains(text(),"${title}")]</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:44:00.001" level="INFO">Wait for Element with selector: xpath=//td[contains(text(),"Plano Loyola")]</msg>
<status status="PASS" starttime="20210517 11:43:59.895" endtime="20210517 11:44:00.002"/>
</kw>
<status status="PASS" starttime="20210517 11:43:59.893" endtime="20210517 11:44:00.002"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210517 11:44:00.129" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-5.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210517 11:44:00.003" endtime="20210517 11:44:00.129"/>
</kw>
<status status="PASS" starttime="20210517 11:43:53.579" endtime="20210517 11:44:00.129"/>
</test>
<test id="s1-s2-t2" name="Cenario: Remover plano cadastrado">
<kw name="Start Admin Session" library="base" type="SETUP">
<kw name="Start Browser Session" library="base">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>true</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210517 11:44:00.184" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210517 11:44:00.360" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210517 11:44:00.183" endtime="20210517 11:44:00.361"/>
</kw>
<kw name="New Page" library="Browser">
<arg>about:blank</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210517 11:44:00.484" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<status status="PASS" starttime="20210517 11:44:00.361" endtime="20210517 11:44:00.485"/>
</kw>
<status status="PASS" starttime="20210517 11:44:00.182" endtime="20210517 11:44:00.485"/>
</kw>
<kw name="Go To Login Pages" library="auth">
<kw name="Go To" library="Browser">
<arg>https://theotokus-bodytest-web.herokuapp.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20210517 11:44:02.531" level="INFO">Succesfully opened URL https://theotokus-bodytest-web.herokuapp.com/</msg>
<status status="PASS" starttime="20210517 11:44:00.486" endtime="20210517 11:44:02.531"/>
</kw>
<status status="PASS" starttime="20210517 11:44:00.485" endtime="20210517 11:44:02.531"/>
</kw>
<kw name="Login With" library="auth">
<arg>admin@bodytest.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:44:02.533" level="INFO">Fills the text 'admin@bodytest.com' in the given field.</msg>
<status status="PASS" starttime="20210517 11:44:02.533" endtime="20210517 11:44:02.587"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=password]</arg>
<arg>${pass}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:44:02.588" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210517 11:44:02.587" endtime="20210517 11:44:02.621"/>
</kw>
<kw name="Click" library="Browser">
<arg>text=Entrar</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:44:02.622" endtime="20210517 11:44:02.703"/>
</kw>
<status status="PASS" starttime="20210517 11:44:02.532" endtime="20210517 11:44:02.704"/>
</kw>
<kw name="User Should Be Logged In" library="nav">
<arg>Administrador</arg>
<kw name="Get Text" library="Browser">
<arg>css=aside strong</arg>
<arg>should be</arg>
<arg>${user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210517 11:44:02.705" endtime="20210517 11:44:03.420"/>
</kw>
<status status="PASS" starttime="20210517 11:44:02.704" endtime="20210517 11:44:03.420"/>
</kw>
<status status="PASS" starttime="20210517 11:44:00.182" endtime="20210517 11:44:03.420"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{plan}</var>
<arg>title=Plano Loyola</arg>
<arg>duration=12</arg>
<arg>price=19.99</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210517 11:44:03.422" level="INFO">&amp;{plan} = { title=Plano Loyola | duration=12 | price=19.99 }</msg>
<status status="PASS" starttime="20210517 11:44:03.421" endtime="20210517 11:44:03.422"/>
</kw>
<kw name="Insert Plan" library="DeloreanLibrary">
<arg>${plan}</arg>
<msg timestamp="20210517 11:44:03.423" level="INFO">delete from plans where title = 'Plano Loyola'</msg>
<msg timestamp="20210517 11:44:04.552" level="INFO">insert into plans(title, duration, price, created_at, updated_at)values('Plano Loyola',12,19.99, NOW(), NOW());</msg>
<status status="PASS" starttime="20210517 11:44:03.422" endtime="20210517 11:44:05.703"/>
</kw>
<kw name="Go To Plans" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=planos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:44:05.705" endtime="20210517 11:44:05.810"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Planos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:44:05.830" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Planos</msg>
<status status="PASS" starttime="20210517 11:44:05.810" endtime="20210517 11:44:05.830"/>
</kw>
<status status="PASS" starttime="20210517 11:44:05.704" endtime="20210517 11:44:05.830"/>
</kw>
<kw name="Search Plan By Title" library="plans">
<arg>${plan.title}</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[placeholder="Buscar plano"]</arg>
<arg>${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:44:05.834" level="INFO">Fills the text 'Plano Loyola' in the given field.</msg>
<status status="PASS" starttime="20210517 11:44:05.833" endtime="20210517 11:44:05.867"/>
</kw>
<status status="PASS" starttime="20210517 11:44:05.831" endtime="20210517 11:44:05.868"/>
</kw>
<kw name="Request Removal By Title" library="plans">
<arg>${plan.title}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//td[contains(text(),"${title}")]/../td/button[@id="trash"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:44:05.871" endtime="20210517 11:44:06.219"/>
</kw>
<status status="PASS" starttime="20210517 11:44:05.868" endtime="20210517 11:44:06.220"/>
</kw>
<kw name="Confirm Removal" library="students">
<kw name="Click" library="Browser">
<arg>text=SIM, pode apagar!</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:44:06.221" endtime="20210517 11:44:06.545"/>
</kw>
<status status="PASS" starttime="20210517 11:44:06.220" endtime="20210517 11:44:06.546"/>
</kw>
<kw name="Toaster Text Should Be" library="components">
<arg>Plano removido com sucesso</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=.Toastify__toast-body &gt;&gt; text=${expect_text}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:44:06.977" level="INFO">Wait for Element with selector: css=.Toastify__toast-body &gt;&gt; text=Plano removido com sucesso</msg>
<status status="PASS" starttime="20210517 11:44:06.547" endtime="20210517 11:44:06.978"/>
</kw>
<status status="PASS" starttime="20210517 11:44:06.546" endtime="20210517 11:44:06.978"/>
</kw>
<kw name="Plan Should Not Visible" library="plans">
<arg>${plan.title}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>xpath=//td[contains(text(),"${title}")]</arg>
<arg>detached</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:44:06.997" level="INFO">Wait for Element with selector: xpath=//td[contains(text(),"Plano Loyola")]</msg>
<status status="PASS" starttime="20210517 11:44:06.981" endtime="20210517 11:44:06.998"/>
</kw>
<status status="PASS" starttime="20210517 11:44:06.979" endtime="20210517 11:44:06.998"/>
</kw>
<kw name="Thinking And Take Screenshot" library="base" type="TEARDOWN">
<arg>2</arg>
<kw name="Sleep" library="BuiltIn">
<arg>${timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210517 11:44:09.001" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210517 11:44:07.000" endtime="20210517 11:44:09.001"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210517 11:44:09.130" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-6.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210517 11:44:09.002" endtime="20210517 11:44:09.130"/>
</kw>
<status status="PASS" starttime="20210517 11:44:06.999" endtime="20210517 11:44:09.130"/>
</kw>
<status status="PASS" starttime="20210517 11:44:00.176" endtime="20210517 11:44:09.131"/>
</test>
<doc>Remoção de planos</doc>
<status status="PASS" starttime="20210517 11:43:53.550" endtime="20210517 11:44:09.184"/>
</suite>
<suite id="s1-s3" name="Search" source="/home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/tests/plans/search.robot">
<kw name="Start Admin Session" library="base" type="SETUP">
<kw name="Start Browser Session" library="base">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>true</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210517 11:44:09.208" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210517 11:44:09.381" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210517 11:44:09.208" endtime="20210517 11:44:09.382"/>
</kw>
<kw name="New Page" library="Browser">
<arg>about:blank</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210517 11:44:09.479" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<status status="PASS" starttime="20210517 11:44:09.382" endtime="20210517 11:44:09.480"/>
</kw>
<status status="PASS" starttime="20210517 11:44:09.207" endtime="20210517 11:44:09.480"/>
</kw>
<kw name="Go To Login Pages" library="auth">
<kw name="Go To" library="Browser">
<arg>https://theotokus-bodytest-web.herokuapp.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20210517 11:44:11.356" level="INFO">Succesfully opened URL https://theotokus-bodytest-web.herokuapp.com/</msg>
<status status="PASS" starttime="20210517 11:44:09.481" endtime="20210517 11:44:11.357"/>
</kw>
<status status="PASS" starttime="20210517 11:44:09.480" endtime="20210517 11:44:11.358"/>
</kw>
<kw name="Login With" library="auth">
<arg>admin@bodytest.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:44:11.359" level="INFO">Fills the text 'admin@bodytest.com' in the given field.</msg>
<status status="PASS" starttime="20210517 11:44:11.359" endtime="20210517 11:44:11.413"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=password]</arg>
<arg>${pass}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:44:11.414" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210517 11:44:11.413" endtime="20210517 11:44:11.440"/>
</kw>
<kw name="Click" library="Browser">
<arg>text=Entrar</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:44:11.440" endtime="20210517 11:44:11.527"/>
</kw>
<status status="PASS" starttime="20210517 11:44:11.358" endtime="20210517 11:44:11.527"/>
</kw>
<kw name="User Should Be Logged In" library="nav">
<arg>Administrador</arg>
<kw name="Get Text" library="Browser">
<arg>css=aside strong</arg>
<arg>should be</arg>
<arg>${user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210517 11:44:11.528" endtime="20210517 11:44:12.238"/>
</kw>
<status status="PASS" starttime="20210517 11:44:11.527" endtime="20210517 11:44:12.239"/>
</kw>
<status status="PASS" starttime="20210517 11:44:09.207" endtime="20210517 11:44:12.239"/>
</kw>
<test id="s1-s3-t1" name="Cenario: Busca exata">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{plan}</var>
<arg>title=Plano Theotokus2</arg>
<arg>duration=12</arg>
<arg>price=19.99</arg>
<arg>total=R$ 239,88</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210517 11:44:12.255" level="INFO">&amp;{plan} = { title=Plano Theotokus2 | duration=12 | price=19.99 | total=R$ 239,88 }</msg>
<status status="PASS" starttime="20210517 11:44:12.254" endtime="20210517 11:44:12.255"/>
</kw>
<kw name="Remove Plan By Title" library="DeloreanLibrary">
<arg>${plan.title}</arg>
<msg timestamp="20210517 11:44:12.256" level="INFO">delete from plans where title LIKE '%Plano Theotokus2%'</msg>
<status status="PASS" starttime="20210517 11:44:12.255" endtime="20210517 11:44:13.363"/>
</kw>
<kw name="Insert Plan" library="DeloreanLibrary">
<arg>${plan}</arg>
<msg timestamp="20210517 11:44:13.365" level="INFO">delete from plans where title = 'Plano Theotokus2'</msg>
<msg timestamp="20210517 11:44:14.508" level="INFO">insert into plans(title, duration, price, created_at, updated_at)values('Plano Theotokus2',12,19.99, NOW(), NOW());</msg>
<status status="PASS" starttime="20210517 11:44:13.364" endtime="20210517 11:44:15.643"/>
</kw>
<kw name="Go To Plans" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=planos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:44:15.645" endtime="20210517 11:44:15.745"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Planos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:44:15.771" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Planos</msg>
<status status="PASS" starttime="20210517 11:44:15.745" endtime="20210517 11:44:15.771"/>
</kw>
<status status="PASS" starttime="20210517 11:44:15.644" endtime="20210517 11:44:15.771"/>
</kw>
<kw name="Search Plan By Title" library="plans">
<arg>${plan.title}</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[placeholder="Buscar plano"]</arg>
<arg>${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:44:15.774" level="INFO">Fills the text 'Plano Theotokus2' in the given field.</msg>
<status status="PASS" starttime="20210517 11:44:15.773" endtime="20210517 11:44:15.808"/>
</kw>
<status status="PASS" starttime="20210517 11:44:15.772" endtime="20210517 11:44:15.808"/>
</kw>
<kw name="Plan Should Be Visible" library="plans">
<arg>${plan.title}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>xpath=//td[contains(text(),"${title}")]</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:44:16.067" level="INFO">Wait for Element with selector: xpath=//td[contains(text(),"Plano Theotokus2")]</msg>
<status status="PASS" starttime="20210517 11:44:15.811" endtime="20210517 11:44:16.067"/>
</kw>
<status status="PASS" starttime="20210517 11:44:15.808" endtime="20210517 11:44:16.068"/>
</kw>
<kw name="Total Items Should Be" library="components">
<arg>1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>css=#pagination .total</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210517 11:44:16.069" level="INFO">${element} = css=#pagination .total</msg>
<status status="PASS" starttime="20210517 11:44:16.068" endtime="20210517 11:44:16.069"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:44:16.089" level="INFO">Wait for Element with selector: css=#pagination .total</msg>
<status status="PASS" starttime="20210517 11:44:16.069" endtime="20210517 11:44:16.090"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>${element}</arg>
<arg>==</arg>
<arg>Total: ${number}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<msg timestamp="20210517 11:44:17.243" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Cenario_Busca_exata_FAILURE_SCREENSHOT_7.png"&gt;&lt;img src="Cenario_Busca_exata_FAILURE_SCREENSHOT_7.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210517 11:44:17.246" level="FAIL">Text 'Total: 4' (str) should be 'Total: 1' (str)</msg>
<status status="FAIL" starttime="20210517 11:44:16.090" endtime="20210517 11:44:17.246"/>
</kw>
<status status="FAIL" starttime="20210517 11:44:16.068" endtime="20210517 11:44:17.247"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210517 11:44:17.391" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-7.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210517 11:44:17.248" endtime="20210517 11:44:17.392"/>
</kw>
<status status="FAIL" starttime="20210517 11:44:12.239" endtime="20210517 11:44:17.392">Text 'Total: 4' (str) should be 'Total: 1' (str)</status>
</test>
<test id="s1-s3-t2" name="Cenario: Registro não Encontrado">
<kw name="Set Variable" library="BuiltIn">
<var>${title}</var>
<arg>Barão Zemo</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210517 11:44:17.408" level="INFO">${title} = Barão Zemo</msg>
<status status="PASS" starttime="20210517 11:44:17.408" endtime="20210517 11:44:17.408"/>
</kw>
<kw name="Remove Plan By Title" library="DeloreanLibrary">
<arg>${title}</arg>
<msg timestamp="20210517 11:44:17.409" level="INFO">delete from plans where title LIKE '%Barão Zemo%'</msg>
<status status="PASS" starttime="20210517 11:44:17.409" endtime="20210517 11:44:18.512"/>
</kw>
<kw name="Go To Plans" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=planos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:44:18.513" endtime="20210517 11:44:18.592"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Planos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:44:18.606" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Planos</msg>
<status status="PASS" starttime="20210517 11:44:18.593" endtime="20210517 11:44:18.607"/>
</kw>
<status status="PASS" starttime="20210517 11:44:18.512" endtime="20210517 11:44:18.607"/>
</kw>
<kw name="Search Plan By Title" library="plans">
<arg>${title}</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[placeholder="Buscar plano"]</arg>
<arg>${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:44:18.609" level="INFO">Fills the text 'Barão Zemo' in the given field.</msg>
<status status="PASS" starttime="20210517 11:44:18.609" endtime="20210517 11:44:18.648"/>
</kw>
<status status="PASS" starttime="20210517 11:44:18.608" endtime="20210517 11:44:18.649"/>
</kw>
<kw name="Register Should Not Be Found" library="components">
<kw name="Wait For Elements State" library="Browser">
<arg>css=div &gt;&gt; text=Nenhum registro Encontrado.</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:44:19.459" level="INFO">Wait for Element with selector: css=div &gt;&gt; text=Nenhum registro Encontrado.</msg>
<status status="PASS" starttime="20210517 11:44:18.650" endtime="20210517 11:44:19.459"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=table</arg>
<arg>detached</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:44:19.472" level="INFO">Wait for Element with selector: css=table</msg>
<status status="PASS" starttime="20210517 11:44:19.460" endtime="20210517 11:44:19.472"/>
</kw>
<status status="PASS" starttime="20210517 11:44:18.649" endtime="20210517 11:44:19.472"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210517 11:44:19.582" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-8.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-8.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210517 11:44:19.473" endtime="20210517 11:44:19.582"/>
</kw>
<status status="PASS" starttime="20210517 11:44:17.399" endtime="20210517 11:44:19.582"/>
</test>
<test id="s1-s3-t3" name="Cenario: Buscar títulos por um único termo">
<kw name="Get JSON" library="base">
<var>${fixtures}</var>
<arg>plans-search.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${EXECDIR}/resources/fixtures/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210517 11:44:19.629" level="INFO" html="true">Getting file '&lt;a href="file:///home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/resources/fixtures/plans-search.json"&gt;/home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/resources/fixtures/plans-search.json&lt;/a&gt;'.</msg>
<msg timestamp="20210517 11:44:19.629" level="INFO">${file} = {
    "word":"Plano",
    "total":3,
    "plans":[
        {
            "title":"Plano Loyola",
            "duration":12,
            "price":50
        },

        {
            "title":"Plano Lisi...</msg>
<status status="PASS" starttime="20210517 11:44:19.628" endtime="20210517 11:44:19.629"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json_object}</var>
<arg>json.loads($file)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210517 11:44:19.637" level="INFO">${json_object} = {'word': 'Plano', 'total': 3, 'plans': [{'title': 'Plano Loyola', 'duration': 12, 'price': 50}, {'title': 'Plano Lisiex', 'duration': 12, 'price': 50}, {'title': 'Plano Roma', 'duration': 12, 'price':...</msg>
<status status="PASS" starttime="20210517 11:44:19.629" endtime="20210517 11:44:19.637"/>
</kw>
<msg timestamp="20210517 11:44:19.638" level="INFO">${fixtures} = {'word': 'Plano', 'total': 3, 'plans': [{'title': 'Plano Loyola', 'duration': 12, 'price': 50}, {'title': 'Plano Lisiex', 'duration': 12, 'price': 50}, {'title': 'Plano Roma', 'duration': 12, 'price':...</msg>
<status status="PASS" starttime="20210517 11:44:19.627" endtime="20210517 11:44:19.638"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${plans}</var>
<arg>${fixtures['plans']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210517 11:44:19.640" level="INFO">${plans} = [{'title': 'Plano Loyola', 'duration': 12, 'price': 50}, {'title': 'Plano Lisiex', 'duration': 12, 'price': 50}, {'title': 'Plano Roma', 'duration': 12, 'price': 50}]</msg>
<status status="PASS" starttime="20210517 11:44:19.638" endtime="20210517 11:44:19.640"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${word}</var>
<arg>${fixtures['word']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210517 11:44:19.642" level="INFO">${word} = Plano</msg>
<status status="PASS" starttime="20210517 11:44:19.640" endtime="20210517 11:44:19.642"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${total}</var>
<arg>${fixtures['total']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210517 11:44:19.643" level="INFO">${total} = 3</msg>
<status status="PASS" starttime="20210517 11:44:19.642" endtime="20210517 11:44:19.643"/>
</kw>
<kw name="Remove Plan By Title" library="DeloreanLibrary">
<arg>Plano</arg>
<msg timestamp="20210517 11:44:19.644" level="INFO">delete from plans where title LIKE '%Plano%'</msg>
<status status="PASS" starttime="20210517 11:44:19.643" endtime="20210517 11:44:20.776"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{plans}</value>
<iter>
<var name="${item}">{'title': 'Plano Loyola', 'duration': 12, 'price': 50}</var>
<kw name="Insert Plan" library="DeloreanLibrary">
<arg>${item}</arg>
<msg timestamp="20210517 11:44:20.778" level="INFO">delete from plans where title = 'Plano Loyola'</msg>
<msg timestamp="20210517 11:44:21.924" level="INFO">insert into plans(title, duration, price, created_at, updated_at)values('Plano Loyola',12,50, NOW(), NOW());</msg>
<status status="PASS" starttime="20210517 11:44:20.778" endtime="20210517 11:44:23.066"/>
</kw>
<status status="PASS" starttime="20210517 11:44:20.777" endtime="20210517 11:44:23.066"/>
</iter>
<iter>
<var name="${item}">{'title': 'Plano Lisiex', 'duration': 12, 'price': 50}</var>
<kw name="Insert Plan" library="DeloreanLibrary">
<arg>${item}</arg>
<msg timestamp="20210517 11:44:23.067" level="INFO">delete from plans where title = 'Plano Lisiex'</msg>
<msg timestamp="20210517 11:44:24.160" level="INFO">insert into plans(title, duration, price, created_at, updated_at)values('Plano Lisiex',12,50, NOW(), NOW());</msg>
<status status="PASS" starttime="20210517 11:44:23.066" endtime="20210517 11:44:25.278"/>
</kw>
<status status="PASS" starttime="20210517 11:44:23.066" endtime="20210517 11:44:25.279"/>
</iter>
<iter>
<var name="${item}">{'title': 'Plano Roma', 'duration': 12, 'price': 50}</var>
<kw name="Insert Plan" library="DeloreanLibrary">
<arg>${item}</arg>
<msg timestamp="20210517 11:44:25.280" level="INFO">delete from plans where title = 'Plano Roma'</msg>
<msg timestamp="20210517 11:44:26.385" level="INFO">insert into plans(title, duration, price, created_at, updated_at)values('Plano Roma',12,50, NOW(), NOW());</msg>
<status status="PASS" starttime="20210517 11:44:25.279" endtime="20210517 11:44:27.522"/>
</kw>
<status status="PASS" starttime="20210517 11:44:25.279" endtime="20210517 11:44:27.522"/>
</iter>
<status status="PASS" starttime="20210517 11:44:20.777" endtime="20210517 11:44:27.522"/>
</for>
<kw name="Go To Plans" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=planos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:44:27.523" endtime="20210517 11:44:27.573"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Planos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:44:27.587" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Planos</msg>
<status status="PASS" starttime="20210517 11:44:27.573" endtime="20210517 11:44:27.587"/>
</kw>
<status status="PASS" starttime="20210517 11:44:27.522" endtime="20210517 11:44:27.588"/>
</kw>
<kw name="Search Plan By Title" library="plans">
<arg>${word}</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[placeholder="Buscar plano"]</arg>
<arg>${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:44:27.590" level="INFO">Fills the text 'Plano' in the given field.</msg>
<status status="PASS" starttime="20210517 11:44:27.589" endtime="20210517 11:44:27.615"/>
</kw>
<status status="PASS" starttime="20210517 11:44:27.588" endtime="20210517 11:44:27.615"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{plans}</value>
<iter>
<var name="${item}">{'title': 'Plano Loyola', 'duration': 12, 'price': 50}</var>
<kw name="Plan Title Should Be Visible" library="components">
<arg>${item['title']}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=table tbody tr &gt;&gt; text=${title}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:44:32.774" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Cenario_Buscar_ttulos_por_um_nico_termo_FAILURE_SCREENSHOT_17.png"&gt;&lt;img src="Cenario_Buscar_ttulos_por_um_nico_termo_FAILURE_SCREENSHOT_17.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210517 11:44:32.776" level="FAIL">TimeoutError: page.waitForSelector: Timeout 5000ms exceeded.
=========================== logs ===========================
waiting for selector "css=table tbody tr &gt;&gt; text=Plano Loyola" to be visible
============================================================
Note: use DEBUG=pw:api environment variable to capture Playwright logs.</msg>
<status status="FAIL" starttime="20210517 11:44:27.618" endtime="20210517 11:44:32.777"/>
</kw>
<status status="FAIL" starttime="20210517 11:44:27.616" endtime="20210517 11:44:32.777"/>
</kw>
<status status="FAIL" starttime="20210517 11:44:27.616" endtime="20210517 11:44:32.777"/>
</iter>
<status status="FAIL" starttime="20210517 11:44:27.616" endtime="20210517 11:44:32.778"/>
</for>
<kw name="Total Items Should Be" library="components">
<arg>${total}</arg>
<status status="NOT RUN" starttime="20210517 11:44:32.778" endtime="20210517 11:44:32.778"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210517 11:44:32.918" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-9.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-9.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210517 11:44:32.779" endtime="20210517 11:44:32.918"/>
</kw>
<status status="FAIL" starttime="20210517 11:44:19.589" endtime="20210517 11:44:32.918">TimeoutError: page.waitForSelector: Timeout 5000ms exceeded.
=========================== logs ===========================
waiting for selector "css=table tbody tr &gt;&gt; text=Plano Loyola" to be visible
============================================================
Note: use DEBUG=pw:api environment variable to capture Playwright logs.</status>
</test>
<doc>Buscar planos</doc>
<status status="FAIL" starttime="20210517 11:44:09.190" endtime="20210517 11:44:32.925"/>
</suite>
<suite id="s1-s4" name="Update" source="/home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/tests/plans/update.robot">
<kw name="Start Admin Session" library="base" type="SETUP">
<kw name="Start Browser Session" library="base">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>true</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210517 11:44:32.999" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210517 11:44:33.179" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210517 11:44:32.999" endtime="20210517 11:44:33.180"/>
</kw>
<kw name="New Page" library="Browser">
<arg>about:blank</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210517 11:44:33.288" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<status status="PASS" starttime="20210517 11:44:33.180" endtime="20210517 11:44:33.289"/>
</kw>
<status status="PASS" starttime="20210517 11:44:32.998" endtime="20210517 11:44:33.289"/>
</kw>
<kw name="Go To Login Pages" library="auth">
<kw name="Go To" library="Browser">
<arg>https://theotokus-bodytest-web.herokuapp.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20210517 11:44:35.118" level="INFO">Succesfully opened URL https://theotokus-bodytest-web.herokuapp.com/</msg>
<status status="PASS" starttime="20210517 11:44:33.290" endtime="20210517 11:44:35.119"/>
</kw>
<status status="PASS" starttime="20210517 11:44:33.289" endtime="20210517 11:44:35.119"/>
</kw>
<kw name="Login With" library="auth">
<arg>admin@bodytest.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:44:35.121" level="INFO">Fills the text 'admin@bodytest.com' in the given field.</msg>
<status status="PASS" starttime="20210517 11:44:35.120" endtime="20210517 11:44:35.180"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=password]</arg>
<arg>${pass}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:44:35.181" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210517 11:44:35.180" endtime="20210517 11:44:35.216"/>
</kw>
<kw name="Click" library="Browser">
<arg>text=Entrar</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:44:35.216" endtime="20210517 11:44:35.294"/>
</kw>
<status status="PASS" starttime="20210517 11:44:35.119" endtime="20210517 11:44:35.294"/>
</kw>
<kw name="User Should Be Logged In" library="nav">
<arg>Administrador</arg>
<kw name="Get Text" library="Browser">
<arg>css=aside strong</arg>
<arg>should be</arg>
<arg>${user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210517 11:44:35.295" endtime="20210517 11:44:36.065"/>
</kw>
<status status="PASS" starttime="20210517 11:44:35.294" endtime="20210517 11:44:36.065"/>
</kw>
<status status="PASS" starttime="20210517 11:44:32.997" endtime="20210517 11:44:36.066"/>
</kw>
<test id="s1-s4-t1" name="Cenario: Atualizar um plano já cadastrado">
<kw name="Get JSON" library="base">
<var>${fixture}</var>
<arg>plans-update.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${EXECDIR}/resources/fixtures/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210517 11:44:36.077" level="INFO" html="true">Getting file '&lt;a href="file:///home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/resources/fixtures/plans-update.json"&gt;/home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/resources/fixtures/plans-update.json&lt;/a&gt;'.</msg>
<msg timestamp="20210517 11:44:36.077" level="INFO">${file} = {
    "before": {
        "title":"Plano Alpha2",
        "duration":12,
        "price":50
    },
    "after": {
        "title":"Plano Theotokus2",
        "duration":20,
        "price":30
    }
}</msg>
<status status="PASS" starttime="20210517 11:44:36.076" endtime="20210517 11:44:36.077"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json_object}</var>
<arg>json.loads($file)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210517 11:44:36.079" level="INFO">${json_object} = {'before': {'title': 'Plano Alpha2', 'duration': 12, 'price': 50}, 'after': {'title': 'Plano Theotokus2', 'duration': 20, 'price': 30}}</msg>
<status status="PASS" starttime="20210517 11:44:36.078" endtime="20210517 11:44:36.079"/>
</kw>
<msg timestamp="20210517 11:44:36.079" level="INFO">${fixture} = {'before': {'title': 'Plano Alpha2', 'duration': 12, 'price': 50}, 'after': {'title': 'Plano Theotokus2', 'duration': 20, 'price': 30}}</msg>
<status status="PASS" starttime="20210517 11:44:36.075" endtime="20210517 11:44:36.079"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${before}</var>
<arg>${fixture['before']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210517 11:44:36.082" level="INFO">${before} = {'title': 'Plano Alpha2', 'duration': 12, 'price': 50}</msg>
<status status="PASS" starttime="20210517 11:44:36.080" endtime="20210517 11:44:36.083"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${after}</var>
<arg>${fixture['after']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210517 11:44:36.087" level="INFO">${after} = {'title': 'Plano Theotokus2', 'duration': 20, 'price': 30}</msg>
<status status="PASS" starttime="20210517 11:44:36.084" endtime="20210517 11:44:36.087"/>
</kw>
<kw name="Insert Plan" library="DeloreanLibrary">
<arg>${before}</arg>
<msg timestamp="20210517 11:44:36.088" level="INFO">delete from plans where title = 'Plano Alpha2'</msg>
<msg timestamp="20210517 11:44:37.194" level="INFO">insert into plans(title, duration, price, created_at, updated_at)values('Plano Alpha2',12,50, NOW(), NOW());</msg>
<status status="PASS" starttime="20210517 11:44:36.088" endtime="20210517 11:44:38.300"/>
</kw>
<kw name="Go To Plans" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=planos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210517 11:44:38.302" endtime="20210517 11:44:38.454"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Planos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210517 11:44:38.476" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Planos</msg>
<status status="PASS" starttime="20210517 11:44:38.454" endtime="20210517 11:44:38.476"/>
</kw>
<status status="PASS" starttime="20210517 11:44:38.301" endtime="20210517 11:44:38.476"/>
</kw>
<kw name="Search Plan By Title" library="plans">
<arg>${before['title']}</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[placeholder="Buscar plano"]</arg>
<arg>${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210517 11:44:38.480" level="INFO">Fills the text 'Plano Alpha2' in the given field.</msg>
<status status="PASS" starttime="20210517 11:44:38.479" endtime="20210517 11:44:38.542"/>
</kw>
<status status="PASS" starttime="20210517 11:44:38.477" endtime="20210517 11:44:38.543"/>
</kw>
<kw name="Go To Plan Update Form" library="plans">
<arg>${before['duration']}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//td[contains(text(),'${plan}')]/..//a[@class='edit']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20210517 11:44:48.696" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Cenario_Atualizar_um_plano_j_cadastrado_FAILURE_SCREENSHOT_9.png"&gt;&lt;img src="Cenario_Atualizar_um_plano_j_cadastrado_FAILURE_SCREENSHOT_9.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20210517 11:44:48.697" level="FAIL">TimeoutError: page.click: Timeout 10000ms exceeded.
=========================== logs ===========================
waiting for selector "xpath=//td[contains(text(),'12')]/..//a[@class='edit']"
============================================================
Note: use DEBUG=pw:api environment variable to capture Playwright logs.</msg>
<status status="FAIL" starttime="20210517 11:44:38.546" endtime="20210517 11:44:48.697"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Edição de plano</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<status status="NOT RUN" starttime="20210517 11:44:48.698" endtime="20210517 11:44:48.699"/>
</kw>
<status status="FAIL" starttime="20210517 11:44:38.543" endtime="20210517 11:44:48.699"/>
</kw>
<kw name="Update a Plan" library="plans">
<arg>${after}</arg>
<status status="NOT RUN" starttime="20210517 11:44:48.700" endtime="20210517 11:44:48.700"/>
</kw>
<kw name="Toaster Text Should Be" library="components">
<arg>Plano atualizado com sucesso</arg>
<status status="NOT RUN" starttime="20210517 11:44:48.701" endtime="20210517 11:44:48.701"/>
</kw>
<kw name="Submit Plan Form" library="plans">
<status status="NOT RUN" starttime="20210517 11:44:48.701" endtime="20210517 11:44:48.701"/>
</kw>
<kw name="Thinking And Take Screenshot" library="base" type="TEARDOWN">
<arg>2</arg>
<kw name="Sleep" library="BuiltIn">
<arg>${timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210517 11:44:50.705" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210517 11:44:48.704" endtime="20210517 11:44:50.706"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210517 11:44:50.824" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-10.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-10.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210517 11:44:50.706" endtime="20210517 11:44:50.824"/>
</kw>
<status status="PASS" starttime="20210517 11:44:48.702" endtime="20210517 11:44:50.824"/>
</kw>
<status status="FAIL" starttime="20210517 11:44:36.066" endtime="20210517 11:44:50.825">TimeoutError: page.click: Timeout 10000ms exceeded.
=========================== logs ===========================
waiting for selector "xpath=//td[contains(text(),'12')]/..//a[@class='edit']"
============================================================
Note: use DEBUG=pw:api environment variable to capture Playwright logs.</status>
</test>
<doc>Atualizar alunos</doc>
<status status="FAIL" starttime="20210517 11:44:32.974" endtime="20210517 11:44:50.834"/>
</suite>
<status status="FAIL" starttime="20210517 11:43:44.608" endtime="20210517 11:44:50.874"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="3" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="7" fail="3" skip="0" id="s1" name="Plans">Plans</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1" name="Create">Plans.Create</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Remove">Plans.Remove</stat>
<stat pass="1" fail="2" skip="0" id="s1-s3" name="Search">Plans.Search</stat>
<stat pass="0" fail="1" skip="0" id="s1-s4" name="Update">Plans.Update</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
