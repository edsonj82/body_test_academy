<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.5 on linux)" generated="20210513 07:10:04.047" rpa="false" schemaversion="2">
<suite id="s1" name="Search" source="/home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/tests/plans/search.robot">
<kw name="Start Admin Session" library="base" type="SETUP">
<kw name="Start Browser Session" library="base">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>false</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210513 07:10:04.862" level="INFO">{"browser": "chromium", "headless": false, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210513 07:10:05.387" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210513 07:10:04.861" endtime="20210513 07:10:05.387"/>
</kw>
<kw name="New Page" library="Browser">
<arg>about:blank</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210513 07:10:05.735" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<status status="PASS" starttime="20210513 07:10:05.388" endtime="20210513 07:10:05.736"/>
</kw>
<status status="PASS" starttime="20210513 07:10:04.860" endtime="20210513 07:10:05.736"/>
</kw>
<kw name="Go To Login Pages" library="auth">
<kw name="Go To" library="Browser">
<arg>https://theotokus-bodytest-web.herokuapp.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20210513 07:10:07.669" level="INFO">Succesfully opened URL https://theotokus-bodytest-web.herokuapp.com/</msg>
<status status="PASS" starttime="20210513 07:10:05.737" endtime="20210513 07:10:07.669"/>
</kw>
<status status="PASS" starttime="20210513 07:10:05.736" endtime="20210513 07:10:07.670"/>
</kw>
<kw name="Login With" library="auth">
<arg>admin@bodytest.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210513 07:10:07.672" level="INFO">Fills the text 'admin@bodytest.com' in the given field.</msg>
<status status="PASS" starttime="20210513 07:10:07.671" endtime="20210513 07:10:07.745"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=password]</arg>
<arg>${pass}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210513 07:10:07.746" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210513 07:10:07.745" endtime="20210513 07:10:07.779"/>
</kw>
<kw name="Click" library="Browser">
<arg>text=Entrar</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210513 07:10:07.780" endtime="20210513 07:10:07.869"/>
</kw>
<status status="PASS" starttime="20210513 07:10:07.670" endtime="20210513 07:10:07.870"/>
</kw>
<kw name="User Should Be Logged In" library="nav">
<arg>Administrador</arg>
<kw name="Get Text" library="Browser">
<arg>css=aside strong</arg>
<arg>should be</arg>
<arg>${user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210513 07:10:07.871" endtime="20210513 07:10:08.652"/>
</kw>
<status status="PASS" starttime="20210513 07:10:07.870" endtime="20210513 07:10:08.653"/>
</kw>
<status status="PASS" starttime="20210513 07:10:04.860" endtime="20210513 07:10:08.653"/>
</kw>
<test id="s1-t1" name="Cenario: Busca exata">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{plan}</var>
<arg>title=Edson Teste</arg>
<arg>duration=12</arg>
<arg>price=19.99</arg>
<arg>total=R$ 239,88</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210513 07:10:08.670" level="INFO">&amp;{plan} = { title=Edson Teste | duration=12 | price=19.99 | total=R$ 239,88 }</msg>
<status status="PASS" starttime="20210513 07:10:08.669" endtime="20210513 07:10:08.670"/>
</kw>
<kw name="Remove Plan By Title" library="DeloreanLibrary">
<arg>${plan.title}</arg>
<msg timestamp="20210513 07:10:08.673" level="INFO">delete from plans where title LIKE '%Edson Teste%'</msg>
<status status="PASS" starttime="20210513 07:10:08.671" endtime="20210513 07:10:09.761"/>
</kw>
<kw name="Insert Plan" library="DeloreanLibrary">
<arg>${plan}</arg>
<msg timestamp="20210513 07:10:09.762" level="INFO">delete from plans where title = 'Edson Teste'</msg>
<msg timestamp="20210513 07:10:10.839" level="INFO">insert into plans(title, duration, price, created_at, updated_at)values('Edson Teste',12,19.99, NOW(), NOW());</msg>
<status status="PASS" starttime="20210513 07:10:09.762" endtime="20210513 07:10:11.950"/>
</kw>
<kw name="Go To Plans" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=planos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210513 07:10:11.952" endtime="20210513 07:10:12.071"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Planos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210513 07:10:12.092" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Planos</msg>
<status status="PASS" starttime="20210513 07:10:12.071" endtime="20210513 07:10:12.092"/>
</kw>
<status status="PASS" starttime="20210513 07:10:11.951" endtime="20210513 07:10:12.092"/>
</kw>
<kw name="Search Plan By Title" library="plans">
<arg>${plan.title}</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[placeholder="Buscar plano"]</arg>
<arg>${title}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210513 07:10:12.096" level="INFO">Fills the text 'Edson Teste' in the given field.</msg>
<status status="PASS" starttime="20210513 07:10:12.095" endtime="20210513 07:10:12.148"/>
</kw>
<status status="PASS" starttime="20210513 07:10:12.093" endtime="20210513 07:10:12.148"/>
</kw>
<kw name="Plan Should Be Visible" library="plans">
<arg>${plan.title}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>xpath=//td[contains(text(),"${title}")]</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210513 07:10:12.438" level="INFO">Wait for Element with selector: xpath=//td[contains(text(),"Edson Teste")]</msg>
<status status="PASS" starttime="20210513 07:10:12.151" endtime="20210513 07:10:12.439"/>
</kw>
<status status="PASS" starttime="20210513 07:10:12.149" endtime="20210513 07:10:12.439"/>
</kw>
<kw name="Total Items Should Be" library="components">
<arg>1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${element}</var>
<arg>css=#pagination .total</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210513 07:10:12.442" level="INFO">${element} = css=#pagination .total</msg>
<status status="PASS" starttime="20210513 07:10:12.441" endtime="20210513 07:10:12.442"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>${element}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210513 07:10:12.476" level="INFO">Wait for Element with selector: css=#pagination .total</msg>
<status status="PASS" starttime="20210513 07:10:12.450" endtime="20210513 07:10:12.476"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>${element}</arg>
<arg>==</arg>
<arg>Total: ${number}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210513 07:10:12.477" endtime="20210513 07:10:12.997"/>
</kw>
<status status="PASS" starttime="20210513 07:10:12.439" endtime="20210513 07:10:12.998"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210513 07:10:13.189" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-1.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210513 07:10:12.999" endtime="20210513 07:10:13.189"/>
</kw>
<tag>search</tag>
<status status="PASS" starttime="20210513 07:10:08.653" endtime="20210513 07:10:13.190"/>
</test>
<doc>Buscar planos</doc>
<status status="PASS" starttime="20210513 07:10:04.049" endtime="20210513 07:10:13.200"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">search</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Search">Search</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
