<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.5 on linux)" generated="20210504 11:48:39.162" rpa="false" schemaversion="2">
<suite id="s1" name="Remove" source="/home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/tests/students/remove.robot">
<test id="s1-t1" name="Cenario: Remover aluno cadastrado">
<kw name="Start Admin Session" library="base" type="SETUP">
<kw name="Start Browser Session" library="base">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>true</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210504 11:48:40.093" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210504 11:48:40.308" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210504 11:48:40.091" endtime="20210504 11:48:40.308"/>
</kw>
<kw name="New Page" library="Browser">
<arg>about:blank</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210504 11:48:40.435" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<status status="PASS" starttime="20210504 11:48:40.309" endtime="20210504 11:48:40.436"/>
</kw>
<status status="PASS" starttime="20210504 11:48:40.090" endtime="20210504 11:48:40.436"/>
</kw>
<kw name="Go To Login Pages" library="auth">
<kw name="Go To" library="Browser">
<arg>https://theotokus-bodytest-web.herokuapp.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20210504 11:48:42.322" level="INFO">Succesfully opened URL https://theotokus-bodytest-web.herokuapp.com/</msg>
<status status="PASS" starttime="20210504 11:48:40.437" endtime="20210504 11:48:42.323"/>
</kw>
<status status="PASS" starttime="20210504 11:48:40.436" endtime="20210504 11:48:42.323"/>
</kw>
<kw name="Login With" library="auth">
<arg>admin@bodytest.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210504 11:48:42.325" level="INFO">Fills the text 'admin@bodytest.com' in the given field.</msg>
<status status="PASS" starttime="20210504 11:48:42.325" endtime="20210504 11:48:42.405"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=password]</arg>
<arg>${pass}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210504 11:48:42.407" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210504 11:48:42.406" endtime="20210504 11:48:42.432"/>
</kw>
<kw name="Click" library="Browser">
<arg>text=Entrar</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210504 11:48:42.433" endtime="20210504 11:48:42.531"/>
</kw>
<status status="PASS" starttime="20210504 11:48:42.324" endtime="20210504 11:48:42.532"/>
</kw>
<kw name="User Should Be Logged In" library="nav">
<arg>Administrador</arg>
<kw name="Get Text" library="Browser">
<arg>css=aside strong</arg>
<arg>should be</arg>
<arg>${user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210504 11:48:42.533" endtime="20210504 11:48:43.324"/>
</kw>
<status status="PASS" starttime="20210504 11:48:42.532" endtime="20210504 11:48:43.325"/>
</kw>
<status status="PASS" starttime="20210504 11:48:40.089" endtime="20210504 11:48:43.325"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{student}</var>
<arg>name=Cintia Rodrigues</arg>
<arg>email=cintia@xpto.com</arg>
<arg>age=30</arg>
<arg>weight=60</arg>
<arg>feet_tall=1.71</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210504 11:48:43.328" level="INFO">&amp;{student} = { name=Cintia Rodrigues | email=cintia@xpto.com | age=30 | weight=60 | feet_tall=1.71 }</msg>
<status status="PASS" starttime="20210504 11:48:43.326" endtime="20210504 11:48:43.328"/>
</kw>
<kw name="Insert Student" library="DeloreanLibrary">
<arg>${student}</arg>
<msg timestamp="20210504 11:48:43.329" level="INFO">delete from students where email = 'cintia@xpto.com'</msg>
<msg timestamp="20210504 11:48:44.416" level="INFO">insert into students(name, email, age, weight, feet_tall, created_at, updated_at)values('Cintia Rodrigues','cintia@xpto.com',30,60,1.71,NOW(),NOW());</msg>
<status status="PASS" starttime="20210504 11:48:43.328" endtime="20210504 11:48:45.547"/>
</kw>
<kw name="Go to Students" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=alunos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210504 11:48:45.548" endtime="20210504 11:48:45.652"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Alunos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210504 11:48:45.681" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Alunos</msg>
<status status="PASS" starttime="20210504 11:48:45.653" endtime="20210504 11:48:45.682"/>
</kw>
<status status="PASS" starttime="20210504 11:48:45.547" endtime="20210504 11:48:45.682"/>
</kw>
<kw name="Request Removal By Email" library="students">
<arg>${student.email}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//td[contains(text(),"${email}")]/../td/button[@id="trash"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210504 11:48:45.684" endtime="20210504 11:48:46.184"/>
</kw>
<status status="PASS" starttime="20210504 11:48:45.682" endtime="20210504 11:48:46.185"/>
</kw>
<kw name="Confirm Removal" library="students">
<kw name="Click" library="Browser">
<arg>text=SIM, pode apagar!</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210504 11:48:46.186" endtime="20210504 11:48:46.531"/>
</kw>
<status status="PASS" starttime="20210504 11:48:46.185" endtime="20210504 11:48:46.531"/>
</kw>
<kw name="Toaster Text Should Be" library="components">
<arg>Aluno removido com sucesso.</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=.Toastify__toast-body &gt;&gt; text=${expect_text}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210504 11:48:46.904" level="INFO">Wait for Element with selector: css=.Toastify__toast-body &gt;&gt; text=Aluno removido com sucesso.</msg>
<status status="PASS" starttime="20210504 11:48:46.533" endtime="20210504 11:48:46.904"/>
</kw>
<status status="PASS" starttime="20210504 11:48:46.532" endtime="20210504 11:48:46.905"/>
</kw>
<kw name="Student Should Not Visible" library="students">
<arg>${student.email}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>xpath=//td[contains(text(),"${email}")]</arg>
<arg>detached</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210504 11:48:46.924" level="INFO">Wait for Element with selector: xpath=//td[contains(text(),"cintia@xpto.com")]</msg>
<status status="PASS" starttime="20210504 11:48:46.907" endtime="20210504 11:48:46.924"/>
</kw>
<status status="PASS" starttime="20210504 11:48:46.905" endtime="20210504 11:48:46.924"/>
</kw>
<kw name="Thinking And Take Screenshot" library="base" type="TEARDOWN">
<arg>2</arg>
<kw name="Sleep" library="BuiltIn">
<arg>${timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210504 11:48:48.927" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210504 11:48:46.926" endtime="20210504 11:48:48.927"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210504 11:48:49.095" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-1.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210504 11:48:48.927" endtime="20210504 11:48:49.095"/>
</kw>
<status status="PASS" starttime="20210504 11:48:46.925" endtime="20210504 11:48:49.096"/>
</kw>
<status status="PASS" starttime="20210504 11:48:40.084" endtime="20210504 11:48:49.096"/>
</test>
<test id="s1-t2" name="Cenario: Desistir da exclusão">
<kw name="Start Admin Session" library="base" type="SETUP">
<kw name="Start Browser Session" library="base">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>true</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210504 11:48:49.183" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210504 11:48:49.387" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210504 11:48:49.182" endtime="20210504 11:48:49.387"/>
</kw>
<kw name="New Page" library="Browser">
<arg>about:blank</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210504 11:48:49.492" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<status status="PASS" starttime="20210504 11:48:49.388" endtime="20210504 11:48:49.493"/>
</kw>
<status status="PASS" starttime="20210504 11:48:49.172" endtime="20210504 11:48:49.493"/>
</kw>
<kw name="Go To Login Pages" library="auth">
<kw name="Go To" library="Browser">
<arg>https://theotokus-bodytest-web.herokuapp.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20210504 11:48:51.379" level="INFO">Succesfully opened URL https://theotokus-bodytest-web.herokuapp.com/</msg>
<status status="PASS" starttime="20210504 11:48:49.494" endtime="20210504 11:48:51.380"/>
</kw>
<status status="PASS" starttime="20210504 11:48:49.494" endtime="20210504 11:48:51.380"/>
</kw>
<kw name="Login With" library="auth">
<arg>admin@bodytest.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210504 11:48:51.382" level="INFO">Fills the text 'admin@bodytest.com' in the given field.</msg>
<status status="PASS" starttime="20210504 11:48:51.381" endtime="20210504 11:48:51.446"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=password]</arg>
<arg>${pass}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210504 11:48:51.447" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210504 11:48:51.447" endtime="20210504 11:48:51.482"/>
</kw>
<kw name="Click" library="Browser">
<arg>text=Entrar</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210504 11:48:51.482" endtime="20210504 11:48:51.555"/>
</kw>
<status status="PASS" starttime="20210504 11:48:51.380" endtime="20210504 11:48:51.555"/>
</kw>
<kw name="User Should Be Logged In" library="nav">
<arg>Administrador</arg>
<kw name="Get Text" library="Browser">
<arg>css=aside strong</arg>
<arg>should be</arg>
<arg>${user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210504 11:48:51.556" endtime="20210504 11:48:52.287"/>
</kw>
<status status="PASS" starttime="20210504 11:48:51.555" endtime="20210504 11:48:52.288"/>
</kw>
<status status="PASS" starttime="20210504 11:48:49.171" endtime="20210504 11:48:52.288"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{student}</var>
<arg>name=Izabel Santos</arg>
<arg>email=izabel@xpto.com</arg>
<arg>age=63</arg>
<arg>weight=80</arg>
<arg>feet_tall=1.56</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20210504 11:48:52.289" level="INFO">&amp;{student} = { name=Izabel Santos | email=izabel@xpto.com | age=63 | weight=80 | feet_tall=1.56 }</msg>
<status status="PASS" starttime="20210504 11:48:52.288" endtime="20210504 11:48:52.289"/>
</kw>
<kw name="Insert Student" library="DeloreanLibrary">
<arg>${student}</arg>
<msg timestamp="20210504 11:48:52.290" level="INFO">delete from students where email = 'izabel@xpto.com'</msg>
<msg timestamp="20210504 11:48:53.389" level="INFO">insert into students(name, email, age, weight, feet_tall, created_at, updated_at)values('Izabel Santos','izabel@xpto.com',63,80,1.56,NOW(),NOW());</msg>
<status status="PASS" starttime="20210504 11:48:52.290" endtime="20210504 11:48:54.465"/>
</kw>
<kw name="Go to Students" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=alunos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210504 11:48:54.467" endtime="20210504 11:48:54.568"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Alunos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210504 11:48:54.608" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Alunos</msg>
<status status="PASS" starttime="20210504 11:48:54.569" endtime="20210504 11:48:54.609"/>
</kw>
<status status="PASS" starttime="20210504 11:48:54.466" endtime="20210504 11:48:54.609"/>
</kw>
<kw name="Request Removal By Email" library="students">
<arg>${student.email}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//td[contains(text(),"${email}")]/../td/button[@id="trash"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210504 11:48:54.612" endtime="20210504 11:48:54.989"/>
</kw>
<status status="PASS" starttime="20210504 11:48:54.610" endtime="20210504 11:48:54.990"/>
</kw>
<kw name="Cancel Removal" library="students">
<kw name="Click" library="Browser">
<arg>text=NÃO</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210504 11:48:54.991" endtime="20210504 11:48:55.320"/>
</kw>
<status status="PASS" starttime="20210504 11:48:54.990" endtime="20210504 11:48:55.320"/>
</kw>
<kw name="Student Should Be Visible" library="students">
<arg>${student.email}</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>xpath=//td[contains(text(),"${email}")]</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210504 11:48:55.354" level="INFO">Wait for Element with selector: xpath=//td[contains(text(),"izabel@xpto.com")]</msg>
<status status="PASS" starttime="20210504 11:48:55.322" endtime="20210504 11:48:55.355"/>
</kw>
<status status="PASS" starttime="20210504 11:48:55.320" endtime="20210504 11:48:55.355"/>
</kw>
<kw name="Take Screenshot" library="Browser" type="TEARDOWN">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210504 11:48:55.550" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-2.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210504 11:48:55.356" endtime="20210504 11:48:55.550"/>
</kw>
<status status="PASS" starttime="20210504 11:48:49.166" endtime="20210504 11:48:55.551"/>
</test>
<doc>Remoção de alunos</doc>
<status status="PASS" starttime="20210504 11:48:39.164" endtime="20210504 11:48:55.608"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="Remove">Remove</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
