<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.5 on linux)" generated="20210510 11:35:06.312" rpa="false" schemaversion="2">
<suite id="s1" name="Update" source="/home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/tests/students/update.robot">
<kw name="Start Admin Session" library="base" type="SETUP">
<kw name="Start Browser Session" library="base">
<kw name="New Browser" library="Browser">
<arg>chromium</arg>
<arg>true</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.
See `Browser, Context and Page` for more information about Browser and related concepts.</doc>
<msg timestamp="20210510 11:35:07.272" level="INFO">{"browser": "chromium", "headless": true, "handleSIGINT": true, "handleSIGTERM": true, "handleSIGHUP": true, "timeout": 30000.0, "devtools": false, "slowMo": 0.0}</msg>
<msg timestamp="20210510 11:35:07.467" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":true,"handleSIGINT":true,"handleSIGTERM":true,"handleSIGHUP":true,"timeout":30000,"devtools":false,"slowMo":0}</msg>
<status status="PASS" starttime="20210510 11:35:07.271" endtime="20210510 11:35:07.468"/>
</kw>
<kw name="New Page" library="Browser">
<arg>about:blank</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210510 11:35:07.590" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<status status="PASS" starttime="20210510 11:35:07.468" endtime="20210510 11:35:07.591"/>
</kw>
<status status="PASS" starttime="20210510 11:35:07.270" endtime="20210510 11:35:07.591"/>
</kw>
<kw name="Go To Login Pages" library="auth">
<kw name="Go To" library="Browser">
<arg>https://theotokus-bodytest-web.herokuapp.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Navigates to the given ``url``.</doc>
<msg timestamp="20210510 11:35:09.518" level="INFO">Succesfully opened URL https://theotokus-bodytest-web.herokuapp.com/</msg>
<status status="PASS" starttime="20210510 11:35:07.592" endtime="20210510 11:35:09.518"/>
</kw>
<status status="PASS" starttime="20210510 11:35:07.591" endtime="20210510 11:35:09.519"/>
</kw>
<kw name="Login With" library="auth">
<arg>admin@bodytest.com</arg>
<arg>pwd123</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=email]</arg>
<arg>${email}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210510 11:35:09.520" level="INFO">Fills the text 'admin@bodytest.com' in the given field.</msg>
<status status="PASS" starttime="20210510 11:35:09.520" endtime="20210510 11:35:09.605"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>css=input[name=password]</arg>
<arg>${pass}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210510 11:35:09.606" level="INFO">Fills the text 'pwd123' in the given field.</msg>
<status status="PASS" starttime="20210510 11:35:09.605" endtime="20210510 11:35:09.649"/>
</kw>
<kw name="Click" library="Browser">
<arg>text=Entrar</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210510 11:35:09.649" endtime="20210510 11:35:09.730"/>
</kw>
<status status="PASS" starttime="20210510 11:35:09.519" endtime="20210510 11:35:09.730"/>
</kw>
<kw name="User Should Be Logged In" library="nav">
<arg>Administrador</arg>
<kw name="Get Text" library="Browser">
<arg>css=aside strong</arg>
<arg>should be</arg>
<arg>${user_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210510 11:35:09.731" endtime="20210510 11:35:10.655"/>
</kw>
<status status="PASS" starttime="20210510 11:35:09.731" endtime="20210510 11:35:10.655"/>
</kw>
<status status="PASS" starttime="20210510 11:35:07.269" endtime="20210510 11:35:10.655"/>
</kw>
<test id="s1-t1" name="Cenario: Atualizar um aluno já cadastrado">
<kw name="Get JSON" library="base">
<var>${fixture}</var>
<arg>students-update.json</arg>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${EXECDIR}/resources/fixtures/${file_name}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210510 11:35:10.678" level="INFO" html="true">Getting file '&lt;a href="file:///home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/resources/fixtures/students-update.json"&gt;/home/edson/workspace/courses/qa_ninja/robot_framework/bodytest/resources/fixtures/students-update.json&lt;/a&gt;'.</msg>
<msg timestamp="20210510 11:35:10.678" level="INFO">${file} = {
    "before": {
        "name": "Kamala Khan",
        "email": "kamalakhan@gmail.com",
        "age": 15,
        "weight": 60,
        "feet_tall": 1.70
    },
    "after": {
        "name": "Ms M...</msg>
<status status="PASS" starttime="20210510 11:35:10.677" endtime="20210510 11:35:10.678"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json_object}</var>
<arg>json.loads($file)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20210510 11:35:10.689" level="INFO">${json_object} = {'before': {'name': 'Kamala Khan', 'email': 'kamalakhan@gmail.com', 'age': 15, 'weight': 60, 'feet_tall': 1.7}, 'after': {'name': 'Ms Marvel', 'email': 'ms@marvel.com', 'age': 16, 'weight': 65, 'feet_...</msg>
<status status="PASS" starttime="20210510 11:35:10.679" endtime="20210510 11:35:10.689"/>
</kw>
<msg timestamp="20210510 11:35:10.690" level="INFO">${fixture} = {'before': {'name': 'Kamala Khan', 'email': 'kamalakhan@gmail.com', 'age': 15, 'weight': 60, 'feet_tall': 1.7}, 'after': {'name': 'Ms Marvel', 'email': 'ms@marvel.com', 'age': 16, 'weight': 65, 'feet_...</msg>
<status status="PASS" starttime="20210510 11:35:10.675" endtime="20210510 11:35:10.690"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${kamalakhan}</var>
<arg>${fixture['before']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210510 11:35:10.692" level="INFO">${kamalakhan} = {'name': 'Kamala Khan', 'email': 'kamalakhan@gmail.com', 'age': 15, 'weight': 60, 'feet_tall': 1.7}</msg>
<status status="PASS" starttime="20210510 11:35:10.691" endtime="20210510 11:35:10.692"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${msmarvel}</var>
<arg>${fixture['after']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210510 11:35:10.694" level="INFO">${msmarvel} = {'name': 'Ms Marvel', 'email': 'ms@marvel.com', 'age': 16, 'weight': 65, 'feet_tall': 1.72}</msg>
<status status="PASS" starttime="20210510 11:35:10.693" endtime="20210510 11:35:10.694"/>
</kw>
<kw name="Remove Student By Name" library="DeloreanLibrary">
<arg>${kamalakhan['name']}</arg>
<msg timestamp="20210510 11:35:10.696" level="INFO">delete from students where name LIKE '%Kamala Khan%'</msg>
<status status="PASS" starttime="20210510 11:35:10.694" endtime="20210510 11:35:11.833"/>
</kw>
<kw name="Remove Student By Name" library="DeloreanLibrary">
<arg>${msmarvel['name']}</arg>
<msg timestamp="20210510 11:35:11.836" level="INFO">delete from students where name LIKE '%Ms Marvel%'</msg>
<status status="PASS" starttime="20210510 11:35:11.834" endtime="20210510 11:35:12.932"/>
</kw>
<kw name="Insert Student" library="DeloreanLibrary">
<arg>${kamalakhan}</arg>
<msg timestamp="20210510 11:35:12.934" level="INFO">delete from students where email = 'kamalakhan@gmail.com'</msg>
<msg timestamp="20210510 11:35:14.102" level="INFO">insert into students(name, email, age, weight, feet_tall, created_at, updated_at)values('Kamala Khan','kamalakhan@gmail.com',15,60,1.7,NOW(),NOW());</msg>
<status status="PASS" starttime="20210510 11:35:12.933" endtime="20210510 11:35:15.221"/>
</kw>
<kw name="Go to Students" library="nav">
<kw name="Click" library="Browser">
<arg>css=a[href$=alunos]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210510 11:35:15.223" endtime="20210510 11:35:15.339"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Gestão de Alunos</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210510 11:35:15.371" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Gestão de Alunos</msg>
<status status="PASS" starttime="20210510 11:35:15.340" endtime="20210510 11:35:15.371"/>
</kw>
<status status="PASS" starttime="20210510 11:35:15.222" endtime="20210510 11:35:15.372"/>
</kw>
<kw name="Search Student By Name" library="students">
<arg>${kamalakhan['name']}</arg>
<kw name="Fill Text" library="Browser">
<arg>css=input[placeholder="Buscar aluno"]</arg>
<arg>${name}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210510 11:35:15.375" level="INFO">Fills the text 'Kamala Khan' in the given field.</msg>
<status status="PASS" starttime="20210510 11:35:15.374" endtime="20210510 11:35:15.421"/>
</kw>
<status status="PASS" starttime="20210510 11:35:15.372" endtime="20210510 11:35:15.421"/>
</kw>
<kw name="Go To Student Update Form">
<arg>${kamalakhan['email']}</arg>
<kw name="Click" library="Browser">
<arg>xpath=//td[contains(text(),'${email}')]/..//a[@class='edit']</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210510 11:35:15.424" endtime="20210510 11:35:15.812"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>css=h1 &gt;&gt; text=Edição de aluno</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210510 11:35:15.832" level="INFO">Wait for Element with selector: css=h1 &gt;&gt; text=Edição de aluno</msg>
<status status="PASS" starttime="20210510 11:35:15.813" endtime="20210510 11:35:15.832"/>
</kw>
<status status="PASS" starttime="20210510 11:35:15.422" endtime="20210510 11:35:15.833"/>
</kw>
<kw name="Update a Student">
<arg>${msmarvel}</arg>
<kw name="Fill Text" library="Browser">
<arg>${NAME_FIELD}</arg>
<arg>${student['name']}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210510 11:35:15.836" level="INFO">Fills the text 'Ms Marvel' in the given field.</msg>
<status status="PASS" starttime="20210510 11:35:15.835" endtime="20210510 11:35:15.883"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${EMAIL_FIELD}</arg>
<arg>${student['email']}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210510 11:35:15.885" level="INFO">Fills the text 'ms@marvel.com' in the given field.</msg>
<status status="PASS" starttime="20210510 11:35:15.883" endtime="20210510 11:35:15.911"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${AGE_FIELD}</arg>
<arg>${student['age']}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210510 11:35:15.913" level="INFO">Fills the text '16' in the given field.</msg>
<status status="PASS" starttime="20210510 11:35:15.911" endtime="20210510 11:35:15.951"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${WEIGTH_FIELD}</arg>
<arg>${student['weight']}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210510 11:35:15.955" level="INFO">Fills the text '65' in the given field.</msg>
<status status="PASS" starttime="20210510 11:35:15.952" endtime="20210510 11:35:15.990"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>${FEET_TALL_FIELD}</arg>
<arg>${student['feet_tall']}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210510 11:35:15.992" level="INFO">Fills the text '1.72' in the given field.</msg>
<status status="PASS" starttime="20210510 11:35:15.990" endtime="20210510 11:35:16.020"/>
</kw>
<kw name="Submit Student Form" library="students">
<kw name="Click" library="Browser">
<arg>css=button[form$=Student]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210510 11:35:16.022" endtime="20210510 11:35:16.095"/>
</kw>
<status status="PASS" starttime="20210510 11:35:16.021" endtime="20210510 11:35:16.095"/>
</kw>
<status status="PASS" starttime="20210510 11:35:15.833" endtime="20210510 11:35:16.095"/>
</kw>
<kw name="Toaster Text Should Be" library="components">
<arg>Aluno atualizado com sucesso.</arg>
<kw name="Wait For Elements State" library="Browser">
<arg>css=.Toastify__toast-body &gt;&gt; text=${expect_text}</arg>
<arg>visible</arg>
<arg>5</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210510 11:35:16.590" level="INFO">Wait for Element with selector: css=.Toastify__toast-body &gt;&gt; text=Aluno atualizado com sucesso.</msg>
<status status="PASS" starttime="20210510 11:35:16.097" endtime="20210510 11:35:16.590"/>
</kw>
<status status="PASS" starttime="20210510 11:35:16.096" endtime="20210510 11:35:16.591"/>
</kw>
<kw name="Thinking And Take Screenshot" library="base" type="TEARDOWN">
<arg>2</arg>
<kw name="Sleep" library="BuiltIn">
<arg>${timeout}</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210510 11:35:18.594" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20210510 11:35:16.593" endtime="20210510 11:35:18.594"/>
</kw>
<kw name="Take Screenshot" library="Browser">
<tag>PageContent</tag>
<doc>Takes a screenshot of the current window and saves it to ``path``. Saves it as a png.</doc>
<msg timestamp="20210510 11:35:18.727" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/robotframework-browser-screenshot-1.png"&gt;&lt;img src="browser/screenshot/robotframework-browser-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20210510 11:35:18.594" endtime="20210510 11:35:18.727"/>
</kw>
<status status="PASS" starttime="20210510 11:35:16.592" endtime="20210510 11:35:18.727"/>
</kw>
<status status="PASS" starttime="20210510 11:35:10.656" endtime="20210510 11:35:18.728"/>
</test>
<doc>Atualizar alunos</doc>
<status status="PASS" starttime="20210510 11:35:06.315" endtime="20210510 11:35:18.736"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Update">Update</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
